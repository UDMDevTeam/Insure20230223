<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:Microsoft_Windows_Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Luna"
                    xmlns:igEditors="http://infragistics.com/Editors"
                    xmlns:igWindows="http://infragistics.com/Windows">

    <Style x:Key="INXamDateTimeEditorStyle1"
           TargetType="{x:Type igEditors:XamDateTimeEditor}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="White" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="33" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="AlwaysValidate" Value="True" />
        <Setter Property="Mask" Value="yyyy/mm/dd" />
        <Setter Property="PromptChar" Value="" />
        <Setter Property="DisplayMode" Value="IncludeBoth" />
        <Setter Property="DataMode" Value="Raw" />
        <Setter Property="InvalidValueBehavior" Value="RetainValue" />
        <Setter Property="IsAlwaysInEditMode" Value="False" />
        <Setter Property="DropDownButtonDisplayMode" Value="MouseOver" />

        <Setter Property="ValueConstraint">
            <Setter.Value>
                <igEditors:ValueConstraint Nullable="True"
                                           ValidateAsType="DateTime" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamDateTimeEditor}">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Gray"
                            BorderThickness="{StaticResource INBorderThickness1}"
                            CornerRadius="4">
                        <Grid>
                            <!--
                                <ToggleButton x:Name="PART_DropDownButton" ClickMode="Press" DockPanel.Dock="Right" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <ToggleButton.IsEnabled>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                <igWindows:BoolToValueConverter>
                                <igWindows:BoolToValueConverter.FalseConvertValue>
                                <System:Boolean>True</System:Boolean>
                                </igWindows:BoolToValueConverter.FalseConvertValue>
                                <igWindows:BoolToValueConverter.TrueConvertValue>
                                <System:Boolean>False</System:Boolean>
                                </igWindows:BoolToValueConverter.TrueConvertValue>
                                </igWindows:BoolToValueConverter>
                                </Binding.Converter>
                                </Binding>
                                </ToggleButton.IsEnabled>
                                </ToggleButton>
                            -->
                            <ToggleButton x:Name="PART_DropDownButton"
                                          HorizontalAlignment="Stretch"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                          Template="{DynamicResource INToggleButton}"
                                          Visibility="{TemplateBinding DropDownButtonVisibility}" />
                            <TextBlock x:Name="TextBlock"
                                       Margin="4,0,0,0"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Text="{TemplateBinding DisplayText}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEmbedded" Value="False">
                            <Setter Property="Padding" Value="4,2" />
                            <Setter Property="igWindows:SimpleTextBlock.OptimizeWidthMeasurement" Value="False" />
                        </Trigger>
                        <!--
                            <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}" />
                            <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}" />
                            </Trigger>
                        -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BrandedBrushIN_DisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource BrandedBrushIN_DisabledForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_light}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="EditTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamDateTimeEditor}">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Gray"
                            BorderThickness="{StaticResource INBorderThickness1}"
                            CornerRadius="4">
                        <Grid>
                            <!--
                                <ToggleButton x:Name="PART_DropDownButton" ClickMode="Press" DockPanel.Dock="Right" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <ToggleButton.IsEnabled>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                <igWindows:BoolToValueConverter>
                                <igWindows:BoolToValueConverter.FalseConvertValue>
                                <System:Boolean>True</System:Boolean>
                                </igWindows:BoolToValueConverter.FalseConvertValue>
                                <igWindows:BoolToValueConverter.TrueConvertValue>
                                <System:Boolean>False</System:Boolean>
                                </igWindows:BoolToValueConverter.TrueConvertValue>
                                </igWindows:BoolToValueConverter>
                                </Binding.Converter>
                                </Binding>
                                </ToggleButton.IsEnabled>
                                </ToggleButton>
                            -->
                            <ToggleButton x:Name="PART_DropDownButton"
                                          HorizontalAlignment="Stretch"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                          Template="{DynamicResource INToggleButton}" />
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="False"
                                   igWindows:PopupHelper.DropDownButton="{Binding ElementName=PART_DropDownButton}">
                                <Viewbox Width="200"
                                         Height="200"
                                         Stretch="Uniform">
                                    <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw"
                                                                                     Color="Transparent">
                                        <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                                BorderThickness="1"
                                                CornerRadius="4"
                                                Padding="1">
                                            <igEditors:XamMonthCalendar x:Name="PART_Calendar"
                                                                        MaxDate="{TemplateBinding ComputedMaxDate}"
                                                                        MinCalendarMode="{TemplateBinding ComputedMinCalendarMode}"
                                                                        MinDate="{TemplateBinding ComputedMinDate}"
                                                                        SelectedDate="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                                        Style="{DynamicResource INXamMonthCalendarStyle1}" />
                                        </Border>
                                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                </Viewbox>
                            </Popup>
                            <igWindows:CardPanel x:Name="PART_FocusSite">
                                <igEditors:SectionsList x:Name="SectionsList"
                                                        Margin="{TemplateBinding Padding}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        FlowDirection="LeftToRight"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        InputMethod.IsInputMethodEnabled="{TemplateBinding InputMethod.IsInputMethodEnabled}"
                                                        InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" />
                                <TextBox x:Name="PART_InputTextBox"
                                         Width="Auto"
                                         Margin="1,0,0,0"
                                         HorizontalAlignment="Left"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Background="Transparent"
                                         BorderBrush="Transparent"
                                         BorderThickness="0"
                                         Foreground="{TemplateBinding Foreground}"
                                         InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}"
                                         SelectionBrush="{DynamicResource BrandedBrushIN}"
                                         Visibility="Collapsed">
                                    <TextBox.TextAlignment>
                                        <Binding Path="HorizontalContentAlignment"
                                                 RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <igEditors:HorizontalToTextAlignmentConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </TextBox.TextAlignment>
                                </TextBox>
                            </igWindows:CardPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="IsEmbedded" Value="False" />
                        <Trigger Property="IsInEditMode" Value="True">
                            <Setter TargetName="SectionsList" Property="IsTabStop" Value="False" />
                            <Setter TargetName="PART_InputTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsTextBoxEntryEnabled" Value="True">
                            <Setter TargetName="SectionsList" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <!--
                            <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}"/>
                            <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}"/>
                            <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}"/>
                            </Trigger>
                        -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BrandedBrushIN_DisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource BrandedBrushIN_DisabledForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_light}" />
                        </Trigger>
                        <Trigger Property="IsFocusWithin" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_light}" />
                        </Trigger>
                        <Trigger Property="IsValueValid" Value="False">
                            <Setter TargetName="PART_InputTextBox" Property="Foreground" Value="DarkRed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="INXamDateTimeEditorStyle2"
           TargetType="{x:Type igEditors:XamDateTimeEditor}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="White" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="33" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="AlwaysValidate" Value="True" />
        <Setter Property="Mask" Value="hh:mm" />
        <Setter Property="PromptChar" Value="" />
        <Setter Property="DisplayMode" Value="IncludeBoth" />
        <Setter Property="DataMode" Value="Raw" />
        <Setter Property="InvalidValueBehavior" Value="RetainValue" />
        <Setter Property="IsAlwaysInEditMode" Value="False" />
        <Setter Property="DropDownButtonDisplayMode" Value="MouseOver" />

        <Setter Property="ValueConstraint">
            <Setter.Value>
                <igEditors:ValueConstraint Nullable="True"
                                           ValidateAsType="DateTime" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamDateTimeEditor}">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Gray"
                            BorderThickness="{StaticResource INBorderThickness1}"
                            CornerRadius="4">
                        <Grid>
                            <!--
                                <ToggleButton x:Name="PART_DropDownButton" ClickMode="Press" DockPanel.Dock="Right" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <ToggleButton.IsEnabled>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                <igWindows:BoolToValueConverter>
                                <igWindows:BoolToValueConverter.FalseConvertValue>
                                <System:Boolean>True</System:Boolean>
                                </igWindows:BoolToValueConverter.FalseConvertValue>
                                <igWindows:BoolToValueConverter.TrueConvertValue>
                                <System:Boolean>False</System:Boolean>
                                </igWindows:BoolToValueConverter.TrueConvertValue>
                                </igWindows:BoolToValueConverter>
                                </Binding.Converter>
                                </Binding>
                                </ToggleButton.IsEnabled>
                                </ToggleButton>
                            -->
                            <ToggleButton x:Name="PART_DropDownButton"
                                          HorizontalAlignment="Stretch"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                          Template="{DynamicResource INToggleButton}"
                                          Visibility="{TemplateBinding DropDownButtonVisibility}" />
                            <TextBlock x:Name="TextBlock"
                                       Margin="4,0,0,0"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Text="{TemplateBinding DisplayText}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEmbedded" Value="False">
                            <Setter Property="Padding" Value="4,2" />
                            <Setter Property="igWindows:SimpleTextBlock.OptimizeWidthMeasurement" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BrandedBrushIN_DisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource BrandedBrushIN_DisabledForeground}" />
                        </Trigger>
                        <!--
                            <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}" />
                            <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}" />
                            </Trigger>
                        -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_light}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="EditTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamDateTimeEditor}">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Gray"
                            BorderThickness="{StaticResource INBorderThickness1}"
                            CornerRadius="4">
                        <Grid>
                            <!--
                                <ToggleButton x:Name="PART_DropDownButton" ClickMode="Press" DockPanel.Dock="Right" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <ToggleButton.IsEnabled>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                <igWindows:BoolToValueConverter>
                                <igWindows:BoolToValueConverter.FalseConvertValue>
                                <System:Boolean>True</System:Boolean>
                                </igWindows:BoolToValueConverter.FalseConvertValue>
                                <igWindows:BoolToValueConverter.TrueConvertValue>
                                <System:Boolean>False</System:Boolean>
                                </igWindows:BoolToValueConverter.TrueConvertValue>
                                </igWindows:BoolToValueConverter>
                                </Binding.Converter>
                                </Binding>
                                </ToggleButton.IsEnabled>
                                </ToggleButton>
                            -->
                            <ToggleButton x:Name="PART_DropDownButton"
                                          HorizontalAlignment="Stretch"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                          Template="{DynamicResource INToggleButton}"
                                          Visibility="Collapsed" />
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="False"
                                   igWindows:PopupHelper.DropDownButton="{Binding ElementName=PART_DropDownButton}">
                                <Viewbox Width="200"
                                         Height="200"
                                         Stretch="Uniform">
                                    <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw"
                                                                                     Color="Transparent">
                                        <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                                BorderThickness="1"
                                                CornerRadius="4"
                                                Padding="1">
                                            <igEditors:XamMonthCalendar x:Name="PART_Calendar"
                                                                        MaxDate="{TemplateBinding ComputedMaxDate}"
                                                                        MinCalendarMode="{TemplateBinding ComputedMinCalendarMode}"
                                                                        MinDate="{TemplateBinding ComputedMinDate}"
                                                                        SelectedDate="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                                        Style="{DynamicResource INXamMonthCalendarStyle1}" />
                                        </Border>
                                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                </Viewbox>
                            </Popup>
                            <igWindows:CardPanel x:Name="PART_FocusSite">
                                <igEditors:SectionsList x:Name="SectionsList"
                                                        Margin="{TemplateBinding Padding}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        FlowDirection="LeftToRight"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        InputMethod.IsInputMethodEnabled="{TemplateBinding InputMethod.IsInputMethodEnabled}"
                                                        InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" />
                                <TextBox x:Name="PART_InputTextBox"
                                         Width="Auto"
                                         Margin="1,0,0,0"
                                         HorizontalAlignment="Left"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Background="Transparent"
                                         BorderBrush="Transparent"
                                         BorderThickness="0"
                                         Foreground="{TemplateBinding Foreground}"
                                         InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}"
                                         SelectionBrush="{DynamicResource BrandedBrushIN}"
                                         Visibility="Collapsed">
                                    <TextBox.TextAlignment>
                                        <Binding Path="HorizontalContentAlignment"
                                                 RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <igEditors:HorizontalToTextAlignmentConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </TextBox.TextAlignment>
                                </TextBox>
                            </igWindows:CardPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="IsEmbedded" Value="False" />
                        <Trigger Property="IsInEditMode" Value="True">
                            <Setter TargetName="SectionsList" Property="IsTabStop" Value="False" />
                            <Setter TargetName="PART_InputTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsTextBoxEntryEnabled" Value="True">
                            <Setter TargetName="SectionsList" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BrandedBrushIN_DisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource BrandedBrushIN_DisabledForeground}" />
                        </Trigger>
                        <!--
                            <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}" />
                            <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}" />
                            </Trigger>
                        -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_light}" />
                        </Trigger>
                        <Trigger Property="IsFocusWithin" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_light}" />
                        </Trigger>
                        <Trigger Property="IsValueValid" Value="False">
                            <Setter TargetName="PART_InputTextBox" Property="Foreground" Value="DarkRed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="INXamDateTimeEditorStyle3"
           TargetType="{x:Type igEditors:XamDateTimeEditor}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="DarkGray" />
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="33" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="AlwaysValidate" Value="True" />
        <Setter Property="Mask" Value="yyyy/mm/dd" />
        <Setter Property="PromptChar" Value="" />
        <Setter Property="DisplayMode" Value="IncludeBoth" />
        <Setter Property="DataMode" Value="Raw" />
        <Setter Property="InvalidValueBehavior" Value="RetainValue" />
        <Setter Property="IsAlwaysInEditMode" Value="False" />
        <Setter Property="DropDownButtonDisplayMode" Value="MouseOver" />
        <Setter Property="IsEnabled" Value="False" />

        <Setter Property="ValueConstraint">
            <Setter.Value>
                <igEditors:ValueConstraint Nullable="True"
                                           ValidateAsType="DateTime" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamDateTimeEditor}">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Teal"
                            BorderThickness="{StaticResource INBorderThickness1}"
                            CornerRadius="4">
                        <Grid>
                            <!--
                                <ToggleButton x:Name="PART_DropDownButton" ClickMode="Press" DockPanel.Dock="Right" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <ToggleButton.IsEnabled>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                <igWindows:BoolToValueConverter>
                                <igWindows:BoolToValueConverter.FalseConvertValue>
                                <System:Boolean>True</System:Boolean>
                                </igWindows:BoolToValueConverter.FalseConvertValue>
                                <igWindows:BoolToValueConverter.TrueConvertValue>
                                <System:Boolean>False</System:Boolean>
                                </igWindows:BoolToValueConverter.TrueConvertValue>
                                </igWindows:BoolToValueConverter>
                                </Binding.Converter>
                                </Binding>
                                </ToggleButton.IsEnabled>
                                </ToggleButton>
                            -->
                            <ToggleButton x:Name="PART_DropDownButton"
                                          HorizontalAlignment="Stretch"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                          Template="{DynamicResource INToggleButton}"
                                          Visibility="{TemplateBinding DropDownButtonVisibility}" />
                            <TextBlock x:Name="TextBlock"
                                       Margin="4,0,0,0"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Text="{TemplateBinding DisplayText}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEmbedded" Value="False">
                            <Setter Property="Padding" Value="4,2" />
                            <Setter Property="igWindows:SimpleTextBlock.OptimizeWidthMeasurement" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}" />
                            <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_light}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="INXamDateTimeEditorStyleLA1"
           TargetType="{x:Type igEditors:XamDateTimeEditor}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="White" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="33" />
        <Setter Property="BorderBrush" Value="Teal" />
        <Setter Property="AlwaysValidate" Value="True" />
        <Setter Property="Mask" Value="yyyy/mm/dd" />
        <Setter Property="PromptChar" Value="" />
        <Setter Property="DisplayMode" Value="IncludeBoth" />
        <Setter Property="DataMode" Value="Raw" />
        <Setter Property="InvalidValueBehavior" Value="RetainValue" />
        <Setter Property="IsAlwaysInEditMode" Value="False" />
        <Setter Property="DropDownButtonDisplayMode" Value="MouseOver" />

        <Setter Property="ValueConstraint">
            <Setter.Value>
                <igEditors:ValueConstraint Nullable="True"
                                           ValidateAsType="DateTime" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamDateTimeEditor}">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Teal"
                            BorderThickness="{StaticResource INBorderThickness1}"
                            CornerRadius="4">
                        <Grid>
                            <!--
                                <ToggleButton x:Name="PART_DropDownButton" ClickMode="Press" DockPanel.Dock="Right" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <ToggleButton.IsEnabled>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                <igWindows:BoolToValueConverter>
                                <igWindows:BoolToValueConverter.FalseConvertValue>
                                <System:Boolean>True</System:Boolean>
                                </igWindows:BoolToValueConverter.FalseConvertValue>
                                <igWindows:BoolToValueConverter.TrueConvertValue>
                                <System:Boolean>False</System:Boolean>
                                </igWindows:BoolToValueConverter.TrueConvertValue>
                                </igWindows:BoolToValueConverter>
                                </Binding.Converter>
                                </Binding>
                                </ToggleButton.IsEnabled>
                                </ToggleButton>
                            -->
                            <ToggleButton x:Name="PART_DropDownButton"
                                          HorizontalAlignment="Stretch"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                          Template="{DynamicResource INToggleButton}"
                                          Visibility="{TemplateBinding DropDownButtonVisibility}" />
                            <TextBlock x:Name="TextBlock"
                                       Margin="4,0,0,0"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Text="{TemplateBinding DisplayText}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEmbedded" Value="False">
                            <Setter Property="Padding" Value="4,2" />
                            <Setter Property="igWindows:SimpleTextBlock.OptimizeWidthMeasurement" Value="False" />
                        </Trigger>
                        <!--
                            <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}" />
                            <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}" />
                            </Trigger>
                        -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BrandedBrushIN_DisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource BrandedBrushIN_DisabledForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_light}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="EditTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamDateTimeEditor}">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Teal"
                            BorderThickness="{StaticResource INBorderThickness1}"
                            CornerRadius="4">
                        <Grid>
                            <!--
                                <ToggleButton x:Name="PART_DropDownButton" ClickMode="Press" DockPanel.Dock="Right" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <ToggleButton.IsEnabled>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                <igWindows:BoolToValueConverter>
                                <igWindows:BoolToValueConverter.FalseConvertValue>
                                <System:Boolean>True</System:Boolean>
                                </igWindows:BoolToValueConverter.FalseConvertValue>
                                <igWindows:BoolToValueConverter.TrueConvertValue>
                                <System:Boolean>False</System:Boolean>
                                </igWindows:BoolToValueConverter.TrueConvertValue>
                                </igWindows:BoolToValueConverter>
                                </Binding.Converter>
                                </Binding>
                                </ToggleButton.IsEnabled>
                                </ToggleButton>
                            -->
                            <ToggleButton x:Name="PART_DropDownButton"
                                          HorizontalAlignment="Stretch"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                          Template="{DynamicResource INToggleButton}" />
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="False"
                                   igWindows:PopupHelper.DropDownButton="{Binding ElementName=PART_DropDownButton}">
                                <Viewbox Width="200"
                                         Height="200"
                                         Stretch="Uniform">
                                    <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw"
                                                                                     Color="Transparent">
                                        <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                                BorderThickness="1"
                                                CornerRadius="4"
                                                Padding="1">
                                            <igEditors:XamMonthCalendar x:Name="PART_Calendar"
                                                                        MaxDate="{TemplateBinding ComputedMaxDate}"
                                                                        MinCalendarMode="{TemplateBinding ComputedMinCalendarMode}"
                                                                        MinDate="{TemplateBinding ComputedMinDate}"
                                                                        SelectedDate="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                                        Style="{DynamicResource INXamMonthCalendarStyle1}" />
                                        </Border>
                                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                </Viewbox>
                            </Popup>
                            <igWindows:CardPanel x:Name="PART_FocusSite">
                                <igEditors:SectionsList x:Name="SectionsList"
                                                        Margin="{TemplateBinding Padding}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        FlowDirection="LeftToRight"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        InputMethod.IsInputMethodEnabled="{TemplateBinding InputMethod.IsInputMethodEnabled}"
                                                        InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" />
                                <TextBox x:Name="PART_InputTextBox"
                                         Width="Auto"
                                         Margin="1,0,0,0"
                                         HorizontalAlignment="Left"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Background="Transparent"
                                         BorderBrush="Transparent"
                                         BorderThickness="0"
                                         Foreground="{TemplateBinding Foreground}"
                                         InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}"
                                         SelectionBrush="{DynamicResource BrandedBrushIN}"
                                         Visibility="Collapsed">
                                    <TextBox.TextAlignment>
                                        <Binding Path="HorizontalContentAlignment"
                                                 RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <igEditors:HorizontalToTextAlignmentConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </TextBox.TextAlignment>
                                </TextBox>
                            </igWindows:CardPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="IsEmbedded" Value="False" />
                        <Trigger Property="IsInEditMode" Value="True">
                            <Setter TargetName="SectionsList" Property="IsTabStop" Value="False" />
                            <Setter TargetName="PART_InputTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsTextBoxEntryEnabled" Value="True">
                            <Setter TargetName="SectionsList" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <!--
                            <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}"/>
                            <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}"/>
                            <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}"/>
                            </Trigger>
                        -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BrandedBrushIN_DisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource BrandedBrushIN_DisabledForeground}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_light}" />
                        </Trigger>
                        <Trigger Property="IsFocusWithin" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource FocusedEditorBackgroundBrush1}" />
                        </Trigger>
                        <Trigger Property="IsValueValid" Value="False">
                            <Setter TargetName="PART_InputTextBox" Property="Foreground" Value="DarkRed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="INXamDateTimeEditorStyleLA2"
           TargetType="{x:Type igEditors:XamDateTimeEditor}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="White" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="33" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="AlwaysValidate" Value="True" />
        <Setter Property="Mask" Value="hh:mm" />
        <Setter Property="PromptChar" Value="" />
        <Setter Property="DisplayMode" Value="IncludeBoth" />
        <Setter Property="DataMode" Value="Raw" />
        <Setter Property="InvalidValueBehavior" Value="RetainValue" />
        <Setter Property="IsAlwaysInEditMode" Value="False" />
        <Setter Property="DropDownButtonDisplayMode" Value="MouseOver" />

        <Setter Property="ValueConstraint">
            <Setter.Value>
                <igEditors:ValueConstraint Nullable="True"
                                           ValidateAsType="DateTime" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamDateTimeEditor}">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Gray"
                            BorderThickness="{StaticResource INBorderThickness1}"
                            CornerRadius="4">
                        <Grid>
                            <!--
                                <ToggleButton x:Name="PART_DropDownButton" ClickMode="Press" DockPanel.Dock="Right" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <ToggleButton.IsEnabled>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                <igWindows:BoolToValueConverter>
                                <igWindows:BoolToValueConverter.FalseConvertValue>
                                <System:Boolean>True</System:Boolean>
                                </igWindows:BoolToValueConverter.FalseConvertValue>
                                <igWindows:BoolToValueConverter.TrueConvertValue>
                                <System:Boolean>False</System:Boolean>
                                </igWindows:BoolToValueConverter.TrueConvertValue>
                                </igWindows:BoolToValueConverter>
                                </Binding.Converter>
                                </Binding>
                                </ToggleButton.IsEnabled>
                                </ToggleButton>
                            -->
                            <ToggleButton x:Name="PART_DropDownButton"
                                          HorizontalAlignment="Stretch"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                          Template="{DynamicResource INToggleButton}"
                                          Visibility="{TemplateBinding DropDownButtonVisibility}" />
                            <TextBlock x:Name="TextBlock"
                                       Margin="4,0,0,0"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Text="{TemplateBinding DisplayText}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEmbedded" Value="False">
                            <Setter Property="Padding" Value="4,2" />
                            <Setter Property="igWindows:SimpleTextBlock.OptimizeWidthMeasurement" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BrandedBrushIN_DisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource BrandedBrushIN_DisabledForeground}" />
                        </Trigger>
                        <!--
                            <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}" />
                            <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}" />
                            </Trigger>
                        -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_light}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="EditTemplate">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamDateTimeEditor}">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Gray"
                            BorderThickness="{StaticResource INBorderThickness1}"
                            CornerRadius="4">
                        <Grid>
                            <!--
                                <ToggleButton x:Name="PART_DropDownButton" ClickMode="Press" DockPanel.Dock="Right" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <ToggleButton.IsEnabled>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                <igWindows:BoolToValueConverter>
                                <igWindows:BoolToValueConverter.FalseConvertValue>
                                <System:Boolean>True</System:Boolean>
                                </igWindows:BoolToValueConverter.FalseConvertValue>
                                <igWindows:BoolToValueConverter.TrueConvertValue>
                                <System:Boolean>False</System:Boolean>
                                </igWindows:BoolToValueConverter.TrueConvertValue>
                                </igWindows:BoolToValueConverter>
                                </Binding.Converter>
                                </Binding>
                                </ToggleButton.IsEnabled>
                                </ToggleButton>
                            -->
                            <ToggleButton x:Name="PART_DropDownButton"
                                          HorizontalAlignment="Stretch"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                          Template="{DynamicResource INToggleButton}"
                                          Visibility="Collapsed" />
                            <Popup x:Name="PART_Popup"
                                   AllowsTransparency="True"
                                   IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                   PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                                   StaysOpen="False"
                                   igWindows:PopupHelper.DropDownButton="{Binding ElementName=PART_DropDownButton}">
                                <Viewbox Width="200"
                                         Height="200"
                                         Stretch="Uniform">
                                    <Microsoft_Windows_Themes:SystemDropShadowChrome x:Name="Shdw"
                                                                                     Color="Transparent">
                                        <Border Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                                BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                                BorderThickness="1"
                                                CornerRadius="4"
                                                Padding="1">
                                            <igEditors:XamMonthCalendar x:Name="PART_Calendar"
                                                                        MaxDate="{TemplateBinding ComputedMaxDate}"
                                                                        MinCalendarMode="{TemplateBinding ComputedMinCalendarMode}"
                                                                        MinDate="{TemplateBinding ComputedMinDate}"
                                                                        SelectedDate="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                                        Style="{DynamicResource INXamMonthCalendarStyle1}" />
                                        </Border>
                                    </Microsoft_Windows_Themes:SystemDropShadowChrome>
                                </Viewbox>
                            </Popup>
                            <igWindows:CardPanel x:Name="PART_FocusSite">
                                <igEditors:SectionsList x:Name="SectionsList"
                                                        Margin="{TemplateBinding Padding}"
                                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                        FlowDirection="LeftToRight"
                                                        Foreground="{TemplateBinding Foreground}"
                                                        InputMethod.IsInputMethodEnabled="{TemplateBinding InputMethod.IsInputMethodEnabled}"
                                                        InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" />
                                <TextBox x:Name="PART_InputTextBox"
                                         Width="Auto"
                                         Margin="1,0,0,0"
                                         HorizontalAlignment="Left"
                                         HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                         VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                         Background="Transparent"
                                         BorderBrush="Transparent"
                                         BorderThickness="0"
                                         Foreground="{TemplateBinding Foreground}"
                                         InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}"
                                         SelectionBrush="{DynamicResource BrandedBrushIN}"
                                         Visibility="Collapsed">
                                    <TextBox.TextAlignment>
                                        <Binding Path="HorizontalContentAlignment"
                                                 RelativeSource="{RelativeSource TemplatedParent}">
                                            <Binding.Converter>
                                                <igEditors:HorizontalToTextAlignmentConverter />
                                            </Binding.Converter>
                                        </Binding>
                                    </TextBox.TextAlignment>
                                </TextBox>
                            </igWindows:CardPanel>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="IsEmbedded" Value="False" />
                        <Trigger Property="IsInEditMode" Value="True">
                            <Setter TargetName="SectionsList" Property="IsTabStop" Value="False" />
                            <Setter TargetName="PART_InputTextBox" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsTextBoxEntryEnabled" Value="True">
                            <Setter TargetName="SectionsList" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BrandedBrushIN_DisabledBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource BrandedBrushIN_DisabledForeground}" />
                        </Trigger>
                        <!--
                            <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}" />
                            <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}" />
                            </Trigger>
                        -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_light}" />
                        </Trigger>
                        <Trigger Property="IsFocusWithin" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource FocusedEditorBackgroundBrush1}" />
                        </Trigger>
                        <Trigger Property="IsValueValid" Value="False">
                            <Setter TargetName="PART_InputTextBox" Property="Foreground" Value="DarkRed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="INXamDateTimeEditorStyleLA3"
           TargetType="{x:Type igEditors:XamDateTimeEditor}">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="16" />
        <Setter Property="FontStretch" Value="Normal" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="Foreground" Value="DarkGray" />
        <Setter Property="Background" Value="LightGray" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Bottom" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="Height" Value="33" />
        <Setter Property="BorderBrush" Value="{x:Null}" />
        <Setter Property="AlwaysValidate" Value="True" />
        <Setter Property="Mask" Value="yyyy/mm/dd" />
        <Setter Property="PromptChar" Value="" />
        <Setter Property="DisplayMode" Value="IncludeBoth" />
        <Setter Property="DataMode" Value="Raw" />
        <Setter Property="InvalidValueBehavior" Value="RetainValue" />
        <Setter Property="IsAlwaysInEditMode" Value="False" />
        <Setter Property="DropDownButtonDisplayMode" Value="MouseOver" />
        <Setter Property="IsEnabled" Value="False" />

        <Setter Property="ValueConstraint">
            <Setter.Value>
                <igEditors:ValueConstraint Nullable="True"
                                           ValidateAsType="DateTime" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igEditors:XamDateTimeEditor}">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Gray"
                            BorderThickness="{StaticResource INBorderThickness1}"
                            CornerRadius="4">
                        <Grid>
                            <!--
                                <ToggleButton x:Name="PART_DropDownButton" ClickMode="Press" DockPanel.Dock="Right" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" Style="{TemplateBinding DropDownButtonStyle}" Visibility="{TemplateBinding DropDownButtonVisibility}" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <ToggleButton.IsEnabled>
                                <Binding Path="IsReadOnly" RelativeSource="{RelativeSource TemplatedParent}">
                                <Binding.Converter>
                                <igWindows:BoolToValueConverter>
                                <igWindows:BoolToValueConverter.FalseConvertValue>
                                <System:Boolean>True</System:Boolean>
                                </igWindows:BoolToValueConverter.FalseConvertValue>
                                <igWindows:BoolToValueConverter.TrueConvertValue>
                                <System:Boolean>False</System:Boolean>
                                </igWindows:BoolToValueConverter.TrueConvertValue>
                                </igWindows:BoolToValueConverter>
                                </Binding.Converter>
                                </Binding>
                                </ToggleButton.IsEnabled>
                                </ToggleButton>
                            -->
                            <ToggleButton x:Name="PART_DropDownButton"
                                          HorizontalAlignment="Stretch"
                                          ClickMode="Press"
                                          Focusable="False"
                                          IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                                          Template="{DynamicResource INToggleButton}"
                                          Visibility="{TemplateBinding DropDownButtonVisibility}" />
                            <TextBlock x:Name="TextBlock"
                                       Margin="4,0,0,0"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Text="{TemplateBinding DisplayText}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEmbedded" Value="False">
                            <Setter Property="Padding" Value="4,2" />
                            <Setter Property="igWindows:SimpleTextBlock.OptimizeWidthMeasurement" Value="False" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}" />
                            <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}" />
                            <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_light}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


</ResourceDictionary>