<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
    xmlns:igPrim="http://schemas.infragistics.com/xaml/primitives"
    xmlns:igWPF="http://schemas.infragistics.com/xaml/wpf"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <SolidColorBrush
        x:Key="WorkDayForeground"
        PresentationOptions:Freeze="true"
        Color="Black" />
    <SolidColorBrush
        x:Key="NonWorkDayForeground"
        PresentationOptions:Freeze="true"
        Color="LightGray" />
    <!--
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="SelectedItemBorderBrush" Color="{StaticResource BrandedColourIN_dark}"/>
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="SelectedItemBackgroundBrush"  Color="{StaticResource BrandedColourIN_light}"/>
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="SelectedItemForegroundBrush" Color="Red"/>
    -->

    <!--
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="TodayBorderBrush" Color="Black"/>
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="TodayForegroundBrush" Color="Black"/>
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="TransparentBrush" Color="Transparent"/>
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="MouseOverItemBackgroundBrush" Color="Transparent"/>
        
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="OtherMonthForeground" Color="Tomato"/>
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="MouseOverItemBorderBrush" Color="{StaticResource BrandedColourIN}"/>
        
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="SelectedFocusedItemBorderBrush" Color="{StaticResource BrandedColourIN_mediumlight}"/>
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarWeekNumberBaseBackground" Color="Transparent"/>
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="CalendarWeekNumberBaseStroke" Color="{StaticResource BrandedColourIN_mediumlight}"/>
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="DayOfWeekBackgroundBrush" Color="Transparent"/>
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="DayOfWeekForegroundBrush" Color="Black"/>
        <SolidColorBrush PresentationOptions:Freeze="true" x:Key="DayOfWeekSeparatorBrush" Color="Transparent"/>
    -->

    <RadialGradientBrush x:Key="RadialGradientBrush1" Center="0.5,0.5" GradientOrigin="0.5,0.5" RadiusX="0.5" RadiusY="0.5">
        <RadialGradientBrush.GradientStops>
            <GradientStop Offset="0" Color="White" />
            <GradientStop Offset="0.5" Color="White" />
            <GradientStop Offset="1.0" Color="{StaticResource BrandedColourIN_mediumlight}" />
        </RadialGradientBrush.GradientStops>
    </RadialGradientBrush>

    <igPrim:ValueConverterGroup
        x:Key="boolToFontBold">
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <sys:Boolean>True</sys:Boolean>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <FontWeight>Bold</FontWeight>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>
    </igPrim:ValueConverterGroup>

    <igPrim:ValueConverterGroup
        x:Key="visibilityTo52Converter">
        <igPrim:FixedValueConverter>
            <igPrim:FixedValueConverter.SourceValue>
                <Visibility>Visible</Visibility>
            </igPrim:FixedValueConverter.SourceValue>
            <igPrim:FixedValueConverter.DestinationValue>
                <sys:Int32>52</sys:Int32>
            </igPrim:FixedValueConverter.DestinationValue>
        </igPrim:FixedValueConverter>

        <igPrim:FixedValueConverter
            DestinationValue="{x:Null}">
            <igPrim:FixedValueConverter.SourceValue>
                <Visibility>Collapsed</Visibility>
            </igPrim:FixedValueConverter.SourceValue>
        </igPrim:FixedValueConverter>

    </igPrim:ValueConverterGroup>

    <Style
        x:Key="INXamMonthCalendarStyle1"
        TargetType="igWPF:XamMonthCalendar">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="igPrim:XamlHelper.Focusable" Value="True" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="TodayButtonVisibility" Value="Collapsed" />
        <Setter Property="FirstDayOfWeek" Value="Sunday" />
        <Setter Property="SelectionType" Value="Single" />
        <Setter Property="ReferenceDate" Value="2013-01-01" />
    </Style>

    <Style
        x:Key="CalendarDayStyle"
        TargetType="igWPF:CalendarDay">
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="MinHeight" Value="30" />
        <Setter Property="MinWidth" Value="36" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4,1,4,1" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="Foreground" Value="Black" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="igWPF:CalendarDay">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup
                                x:Name="WorkDayStates">
                                <VisualState
                                    x:Name="WorkDay">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="textBlock"
                                            Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0"
                                                Value="{StaticResource WorkDayForeground}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="textBlock"
                                            Storyboard.TargetProperty="(TextBlock.FontWeight)">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <FontWeight>Normal</FontWeight>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <!--
                                    <VisualState x:Name="NonWorkday">
                                    <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="Foreground">
                                    <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource NonWorkDayForeground}"/>
                                    </ObjectAnimationUsingKeyFrames>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontWeight)" Storyboard.TargetName="textBlock">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                    <FontWeight>Bold</FontWeight>
                                    </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    </VisualState>
                                -->
                            </VisualStateGroup>
                            <!--
                                <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused"/>
                                <VisualState x:Name="Focused">
                                <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedItem">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                                </VisualState>
                                </VisualStateGroup>
                            -->
                            <VisualStateGroup
                                x:Name="CommonStates">
                                <VisualState
                                    x:Name="Normal" />
                                <VisualState
                                    x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="MouseOverItem"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <!--
                                    <VisualState x:Name="Disabled">
                                    <Storyboard>
                                    <Storyboard>
                                    <DoubleAnimation Duration="0" To="0.40" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" />
                                    </Storyboard>
                                    <DoubleAnimation Duration="0" To="0.40" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="OtherMonthDay" />
                                    </Storyboard>
                                    </VisualState>
                                -->
                            </VisualStateGroup>
                            <!--
                                <VisualStateGroup x:Name="DayStates">
                                <VisualState x:Name="Today">
                                <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="Foreground">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TodayForegroundBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="Background">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TodayBackgroundBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="BorderBrush">
                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TodayBorderBrush}"/>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontWeight)" Storyboard.TargetName="textBlock">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                <FontWeight>Bold</FontWeight>
                                </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                                </VisualState>
                                <VisualState x:Name="RegularDay"/>
                                </VisualStateGroup>
                            -->
                            <!--
                                <VisualStateGroup x:Name="LeadingOrTrailingStates">
                                <VisualState x:Name="IsNotLeadingOrTrailing"/>
                                <VisualState x:Name="IsLeadingOrTrailing">
                                <Storyboard>
                                <DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="(UIElement.Opacity)" Storyboard.TargetName="textBlock" />
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="OtherDay">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="textBlock">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                <Visibility>Collapsed</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                                </VisualState>
                                </VisualStateGroup>
                            -->
                            <!--
                                <VisualStateGroup x:Name="ActiveStates">
                                <VisualState x:Name="Inactive"/>
                                <VisualState x:Name="Active">
                                <Storyboard>
                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="FocusedItem">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                <DiscreteObjectKeyFrame.Value>
                                <Visibility>Visible</Visibility>
                                </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                                </ObjectAnimationUsingKeyFrames>
                                </Storyboard>
                                </VisualState>
                                </VisualStateGroup>
                            -->
                            <VisualStateGroup
                                x:Name="SelectionStates">
                                <VisualState
                                    x:Name="Selected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="SelectedDate"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontWeight)" Storyboard.TargetName="textBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                            <FontWeight>Bold</FontWeight>
                                            </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.Background)" Storyboard.TargetName="textBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                            <Brush>Turquoise</Brush>
                                            </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="textBlock" Storyboard.TargetProperty="Foreground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource SelectedItemForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="InnerBorder" Storyboard.TargetProperty="BorderBrush">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Red"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        -->
                                    </Storyboard>
                                </VisualState>
                                <!--
                                    <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="SelectedItem">
                                    <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                    <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                    </DiscreteObjectKeyFrame>
                                    </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                    </VisualState>
                                -->
                                <VisualState
                                    x:Name="Unselected">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames
                                            Storyboard.TargetName="SelectedDate"
                                            Storyboard.TargetProperty="(UIElement.Visibility)">
                                            <DiscreteObjectKeyFrame
                                                KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <!--
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(TextBlock.FontWeight)" Storyboard.TargetName="textBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                            <DiscreteObjectKeyFrame.Value>
                                            <FontWeight>Normal</FontWeight>
                                            </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        -->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <!--
                                <VisualStateGroup x:Name="HighlightStates">
                                <VisualState x:Name="IsHighlighted"/>
                                <VisualState x:Name="IsNotHighlighted"/>
                                </VisualStateGroup>
                            -->
                        </VisualStateManager.VisualStateGroups>

                        <!--  <Rectangle Fill="{StaticResource TransparentBrush}" MinWidth="30" MinHeight="30"/>  -->
                        <Border
                            x:Name="MouseOverItem"
                            Background="Transparent"
                            BorderBrush="{StaticResource BrandedBrushIN_dark}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="24"
                            Visibility="Collapsed" />

                        <TextBlock
                            x:Name="textBlock"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Foreground="Black"
                            Text="{TemplateBinding Content}" />

                        <!--  <Rectangle x:Name="SelectedItem" Visibility="Collapsed" Stroke="{StaticResource SelectedItemBorderBrush}" StrokeThickness="1" Fill="{StaticResource SelectedItemBackgroundBrush}"/>  -->

                        <Border
                            x:Name="SelectedDate"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            Background="{StaticResource RadialGradientBrush1}"
                            BorderBrush="{StaticResource BrandedBrushIN_dark}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="24"
                            Visibility="Collapsed"
                            igPrim:XamlHelper.SnapsToDevicePixels="True">
                            <TextBlock
                                x:Name="textBlockSelectedDate"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                FontWeight="Bold"
                                Foreground="{StaticResource BrandedBrushIN_mediumdark}"
                                Text="{TemplateBinding Content}" />
                        </Border>

                        <Border
                            x:Name="Weekend"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Visibility="Collapsed"
                            igPrim:XamlHelper.SnapsToDevicePixels="True">
                            <TextBlock
                                x:Name="textBlockWeekend"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                FontWeight="Bold"
                                Foreground="Black"
                                Text="{TemplateBinding Content}" />
                        </Border>

                        <Border
                            x:Name="OtherDay"
                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Visibility="Collapsed"
                            igPrim:XamlHelper.SnapsToDevicePixels="True">
                            <TextBlock
                                x:Name="textBlockOtherDay"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                FontWeight="Normal"
                                Foreground="LightGray"
                                Text="{TemplateBinding Content}" />
                        </Border>

                        <!--
                            <Border x:Name="InnerBorder" igPrim:XamlHelper.SnapsToDevicePixels="True" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}">
                            <Grid Margin="{TemplateBinding Padding}">
                            <TextBlock x:Name="textBlock"
                            FontWeight="{Binding Path=IsHighlighted, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToFontBold}}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Foreground="{TemplateBinding Foreground}"/>
                            <TextBlock x:Name="SelectedItem1"
                            FontWeight="{Binding Path=IsHighlighted, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToFontBold}}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Visibility="Collapsed" Foreground="{StaticResource SelectedItemForegroundBrush}"/>
                            <TextBlock x:Name="OtherMonthDay"
                            FontWeight="{Binding Path=IsHighlighted, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource boolToFontBold}}" Text="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}" Visibility="Collapsed" Foreground="{StaticResource OtherMonthForeground}"/>
                            </Grid>
                            </Border>
                        -->
                        <!--  <Rectangle x:Name="FocusedItem" Visibility="Collapsed" Stroke="{StaticResource SelectedFocusedItemBorderBrush}" StrokeThickness="1" Fill="LightSalmon"/>  -->
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsWorkday" Value="False">
                            <Setter TargetName="Weekend" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsLeadingOrTrailingItem" Value="True">
                            <Setter TargetName="textBlock" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Weekend" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="OtherDay" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style
        x:Key="INXamMonthCalendarStyle2"
        TargetType="igWPF:XamMonthCalendar">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="igPrim:XamlHelper.Focusable" Value="True" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="TodayButtonVisibility" Value="Collapsed" />
        <Setter Property="FirstDayOfWeek" Value="Sunday" />
        <Setter Property="SelectionType" Value="Single" />


        <Setter Property="CalendarDayStyle" Value="{StaticResource CalendarDayStyle}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="igWPF:XamMonthCalendar">
                    <Border
                        x:Name="mainBorder"
                        Background="White"
                        BorderBrush="Gray"
                        BorderThickness="2"
                        CornerRadius="4"
                        Padding="6"
                        igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Grid
                            x:Name="RootPanel"
                            igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                            <Grid.RowDefinitions>
                                <RowDefinition
                                    Height="*" />
                                <RowDefinition
                                    Height="Auto" />
                            </Grid.RowDefinitions>
                            <igWPF:CalendarItemGroupPanel
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource BrandedBrushIN}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

    <Style
        x:Key="INXamMonthCalendarStyle3"
        TargetType="igWPF:XamMonthCalendar">
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <Setter Property="igPrim:XamlHelper.Focusable" Value="True" />
        <Setter Property="FontSize" Value="14.667" />
        <Setter Property="FontFamily" Value="Segoe UI" />
        <Setter Property="TodayButtonVisibility" Value="Collapsed" />
        <Setter Property="FirstDayOfWeek" Value="Sunday" />
        <Setter Property="SelectionType" Value="Single" />


        <Setter Property="CalendarDayStyle" Value="{StaticResource CalendarDayStyle}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="igWPF:XamMonthCalendar">
                    <Border
                        x:Name="mainBorder"
                        Background="White"
                        BorderBrush="Gray"
                        BorderThickness="0"
                        CornerRadius="4"
                        Padding="6"
                        igPrim:XamlHelper.SnapsToDevicePixels="True">
                        <Grid
                            x:Name="RootPanel"
                            igPrim:XamlHelper.SnapsToDevicePixels="{TemplateBinding igPrim:XamlHelper.SnapsToDevicePixels}">
                            <Grid.RowDefinitions>
                                <RowDefinition
                                    Height="*" />
                                <RowDefinition
                                    Height="Auto" />
                            </Grid.RowDefinitions>
                            <igWPF:CalendarItemGroupPanel
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource BrandedBrushIN}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>

</ResourceDictionary>