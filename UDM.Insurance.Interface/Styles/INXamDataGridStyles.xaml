<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:igWPF="http://schemas.infragistics.com/xaml/wpf">

    <!-- ================================================================================================ -->

    <Style x:Key="INDataRecordCellAreaStyle1" TargetType="{x:Type igWPF:DataRecordCellArea}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Height" Value="24" />
        <!--<Setter Property="Height" Value="28" />-->

        <!--<Setter Property="ContextMenu" Value="{DynamicResource RecordContextMenu}" />-->

        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#00FFFFFF" Offset="0"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderBrush" Value="#00000000"/>
        <Setter Property="BackgroundHover">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="Transparent"/>
                    <GradientStop Offset="1" Color="Transparent"/>
                    <!--White {DynamicResource BrandedColourIN}-->
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderHoverBrush" Value="{DynamicResource BrandedBrushIN}"/>
        <Setter Property="BackgroundActive">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="White"/>
                    <GradientStop Offset="1" Color="{DynamicResource BrandedColourIN}"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderActiveBrush" Value="{DynamicResource BrandedBrushIN}"/>
        <Setter Property="BackgroundAlternate">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="#00EEEEEE"/>
                    <GradientStop Offset="1" Color="#BF545454"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderAlternateBrush" Value="#00000000"/>
        <Setter Property="BackgroundSelected">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Offset="0" Color="White"/>
                    <GradientStop Offset="1" Color="{DynamicResource BrandedColourIN}"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderSelectedBrush" Value="{DynamicResource BrandedBrushIN}"/>
        <Setter Property="CornerRadius" Value="3"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="Black"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWPF:DataRecordCellArea}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="timelineIsActive">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Active" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineIsActive_off">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Active" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineIsSelected">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.1000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineIsSelected_off">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Selected" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineHover">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="timelineHover_off">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Hover" Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0"/>
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <igWPF:CardPanel>
                        <!-- Background -->
                        <Border
							x:Name="Background"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
                                   CornerRadius="{TemplateBinding CornerRadius}"/>
                        <!-- Background Alternate -->
                        <Border
							x:Name="Alternate"
							Visibility="Collapsed"
							Background="{TemplateBinding BackgroundAlternate}"
							BorderBrush="{TemplateBinding BorderAlternateBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}"
							Opacity="1"/>
                        <!-- Background Selected -->
                        <Border
							x:Name="Selected"
							Visibility="Visible"
							Background="{TemplateBinding BackgroundSelected}"
							BorderBrush="{TemplateBinding BorderSelectedBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}"
							Opacity="0"/>
                        <!-- Background Hover -->
                        <Border
							x:Name="Hover"
							Visibility="Visible"
							Background="{TemplateBinding BackgroundHover}"
							CornerRadius="{TemplateBinding CornerRadius}"
							BorderBrush="{TemplateBinding BorderHoverBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Opacity="0"/>
                        <!-- Background Active -->
                        <Border
							x:Name="Active"
							Visibility="Collapsed"
							Background="{TemplateBinding BackgroundActive}"
							BorderBrush="{TemplateBinding BorderActiveBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="{TemplateBinding CornerRadius}"/>
                        <ContentPresenter x:Name="CellContent" Style="{TemplateBinding ForegroundStyle}" Content="{TemplateBinding Content}"/>
                    </igWPF:CardPanel>
                    <ControlTemplate.Triggers>
                        <!--<Trigger Property="IsActive" Value="True">
                            <Setter TargetName="CellContent" Property="Style" 
								Value="{Binding Path=ForegroundActiveStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                            <Setter Property="Visibility" TargetName="Active" Value="Visible"/>
                        </Trigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="timelineIsSelected_BeginStoryboard" Storyboard="{StaticResource timelineIsSelected}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="timelineIsSelected_off_BeginStoryboard" Storyboard="{StaticResource timelineIsSelected_off}"/>
                            </Trigger.ExitActions>
                            <Setter TargetName="CellContent" Property="Style" 
								Value="{Binding Path=ForegroundSelectedStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>-->
                        <!--<Trigger Property="IsAlternate" Value="True">
								<Setter TargetName="Alternate" Property="Visibility" Value="Visible"/>
								<Setter TargetName="CellContent" Property="Style" Value="{Binding Path=ForegroundAlternateStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
							</Trigger>-->

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsAlternate" Value="True"/>
                                <Condition Property="IsFilterRecord" Value="False"/>
                                <Condition Property="IsAddRecord" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="Alternate" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="CellContent" Property="Style" Value="{Binding Path=ForegroundAlternateStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsActive" Value="True"/>
                                <Condition Property="IsFilterRecord" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="CellContent" Property="Style" Value="{Binding Path=ForegroundActiveStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Visibility" TargetName="Active" Value="Visible"/>
                        </MultiTrigger>

                        <!-- JM 03-11-10 TFS27879 - Use EventTriggers instead of Proeprty Triggers to avoid memory leak.  -->
                        <!--<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True"/>
								<Condition Property="IsFilterRecord" Value="False"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard x:Name="timelineIsSelected_BeginStoryboard" Storyboard="{StaticResource timelineIsSelected}"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard x:Name="timelineIsSelected_off_BeginStoryboard" Storyboard="{StaticResource timelineIsSelected_off}"/>
							</MultiTrigger.ExitActions>
							<Setter TargetName="CellContent" Property="Style" Value="{Binding Path=ForegroundSelectedStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True"/>
								<Condition Property="IsFilterRecord" Value="False"/>
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard x:Name="timelineHover_BeginStoryboard" Storyboard="{StaticResource timelineHover}"/>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard x:Name="timelineHover_off_BeginStoryboard" Storyboard="{StaticResource timelineHover_off}"/>
							</MultiTrigger.ExitActions>
							<Setter TargetName="CellContent" Property="Style" Value="{Binding Path=ForegroundHoverStyle, RelativeSource={RelativeSource TemplatedParent}}"/>
						</MultiTrigger>-->
                        <!--<Trigger Property="IsMouseOver" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="timelineHover_BeginStoryboard" Storyboard="{StaticResource timelineHover}"/>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard x:Name="timelineHover_off_BeginStoryboard" Storyboard="{StaticResource timelineHover_off}"/>
                            </Trigger.ExitActions>
                            <Setter TargetName="CellContent" Property="Style" 
								Value="{Binding Path=ForegroundHoverStyle, RelativeSource={RelativeSource TemplatedParent}}" />
                        </Trigger>-->
                        <!-- JM 10-27-10 TFS49130/32061 -->
                        <!--<EventTrigger RoutedEvent="UIElement.MouseEnter">-->
                        <EventTrigger RoutedEvent="igWPF:DataRecordCellArea.HoverBegin">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource timelineHover}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <!-- JM 10-27-10 TFS49130/32061 -->
                        <!--<EventTrigger RoutedEvent="UIElement.MouseLeave">-->
                        <EventTrigger RoutedEvent="igWPF:DataRecordCellArea.HoverEnd">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource timelineHover_off}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igWPF:DataRecordCellArea.Selected">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource timelineIsSelected}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <EventTrigger RoutedEvent="igWPF:DataRecordCellArea.Deselected">
                            <EventTrigger.Actions>
                                <BeginStoryboard Storyboard="{StaticResource timelineIsSelected_off}"/>
                            </EventTrigger.Actions>
                        </EventTrigger>
                        <Trigger Property="IsFilterRecord" Value="True">
                            <Setter Property="Visibility" TargetName="Hover" Value="Collapsed"/>
                            <Setter Property="Visibility" TargetName="Selected" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="INLabelPresenterStyle1" TargetType="{x:Type igWPF:LabelPresenter}" >
        <Setter Property="OverridesDefaultStyle" Value="False" />
        <Setter Property="FontFamily" Value="Arial" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontStyle" Value="Normal" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Background" Value="White" />
        <Setter Property="LabelHighlight" Value="{DynamicResource BrandedBrushIN}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="Auto" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWPF:LabelPresenter}">
                    <ControlTemplate.Resources>

                    </ControlTemplate.Resources>
                    <Grid x:Name="labelCntr" Width="Auto" Height="Auto" Margin="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border
							Width="Auto"
							Height="Auto"
                            CornerRadius="2"
							SnapsToDevicePixels="True"
							Background="Transparent"
							x:Name="background"/>
                        <Border
							x:Name="highlight"
							Opacity="0"
							Width="Auto"
							Height="Auto"
                            CornerRadius="2"
							Background="{TemplateBinding LabelHighlight}"
							SnapsToDevicePixels="True"/>
                        <Grid
							HorizontalAlignment="Stretch"
							VerticalAlignment="Stretch"
							x:Name="sortIndicatorAndLabel"
                            Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="0.9*"/>
                                <ColumnDefinition Width="0.1*"/>
                            </Grid.ColumnDefinitions>
                            <ContentPresenter
								x:Name="LabelContent"
								Focusable="False"
								Content="{Binding Path=Content, RelativeSource={RelativeSource TemplatedParent}}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
								ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
								VerticalAlignment="Center"/>
                            <igWPF:SortIndicator
								x:Name="SortIndicator"
								SortStatus="{TemplateBinding SortStatus}"
								Visibility="Collapsed"
								HorizontalAlignment="Right"
								VerticalAlignment="Center"
								Width="Auto"
								Grid.Column="1"
								Margin="5,0,0,0"/>
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="SortStatus" Value="Ascending">
                            <Setter TargetName="highlight" Property="Opacity" Value="1"/>
                            <Setter TargetName="SortIndicator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="SortStatus" Value="Descending">
                            <Setter TargetName="highlight" Property="Opacity" Value="1"/>
                            <Setter TargetName="SortIndicator" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="highlight" Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="INXamDataGridStyle1" TargetType="{x:Type igWPF:XamDataGrid}">
        <Setter Property="Background" Value="White"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="AutoFit" Value="True" />

        <Setter Property="FieldSettings">
            <Setter.Value>
                <igWPF:FieldSettings 
                    LabelTextAlignment="Center"
                    CellClickAction="SelectRecord" 
                    AllowEdit="False"
                    LabelPresenterStyle="{StaticResource INLabelPresenterStyle1}"
                    />
            </Setter.Value>
        </Setter>

        <Setter Property="FieldLayoutSettings" >
            <Setter.Value>
                <igWPF:FieldLayoutSettings
                    AutoGenerateFields="True"
                    SelectionTypeRecord="Single"
                    SelectionTypeCell="None"
                    HighlightAlternateRecords="False"
                    DataRecordCellAreaStyle="{StaticResource INDataRecordCellAreaStyle1}"
                    AllowDelete="False">
                    <igWPF:FieldLayoutSettings.DataRecordPresenterStyle>
                        <Style TargetType="{x:Type igWPF:DataRecordPresenter}" >
                            <Setter Property="HeaderAreaBackground" Value="#F0F0F0" />
                            <Setter Property="Margin" Value="1"></Setter>
                        </Style>
                    </igWPF:FieldLayoutSettings.DataRecordPresenterStyle>
                </igWPF:FieldLayoutSettings>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type igWPF:XamDataGrid}">
                    <Border x:Name="mainBorder"
                        CornerRadius="6"
                        BorderBrush="DarkGray"  
                        BorderThickness="2"
                        Background="White"
                        >
                        <Grid x:Name="PART_ContentSiteGrid" >

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocusWithin" Value="True">
                            <Setter TargetName="mainBorder" Property="BorderBrush" Value="{DynamicResource BrandedBrushIN}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ================================================================================================ -->


</ResourceDictionary>