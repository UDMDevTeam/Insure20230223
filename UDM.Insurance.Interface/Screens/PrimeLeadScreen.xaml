<src:BaseControl  
    x:Class="UDM.Insurance.Interface.Screens.PrimeLeadScreen"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:business="clr-namespace:UDM.Insurance.Business;assembly=UDM.Insurance.Business"
    xmlns:commands="clr-namespace:UDM.Insurance.Interface.Commands"
    xmlns:content="clr-namespace:UDM.Insurance.Interface.Content"
    xmlns:controls="clr-namespace:UDM.Insurance.Interface.Controls"
    xmlns:converters="clr-namespace:UDM.WPF.Converters;assembly=UDM.WPF"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="clr-namespace:UDM.Insurance.Interface.Data"
    xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
    xmlns:ig="http://schemas.infragistics.com/xaml"
    xmlns:igWPF="http://schemas.infragistics.com/xaml/wpf"
    xmlns:library="clr-namespace:UDM.Insurance.Interface.Library"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:src="clr-namespace:Embriant.WPF.Controls;assembly=Embriant.WPF"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    x:Name="CtrlLeadApplicationScreen"
    Width="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Width, Converter={converters:MathConverter}, ConverterParameter=x*0.625}"
    Height="{Binding Source={x:Static SystemParameters.WorkArea}, Path=Height, Converter={converters:MathConverter}, ConverterParameter=x*0.769}"
    d:DesignHeight="800"
    d:DesignWidth="1200"
    BorderThickness="0"
    Close="CtrlLeadApplicationScreen_Close"
    DataContext="{Binding RelativeSource={RelativeSource Self}, Path=LaData}"
    KeyUp="CtrlLeadApplicationScreen_KeyUp"
    Loaded="CtrlLeadApplicationScreen_Loaded"
    MouseDown="CtrlLeadApplicationScreen_MouseDown"
    mc:Ignorable="d">

    <src:BaseControl.Resources>
        <library:IntToEnumConverter x:Key="IntToEnumConverter" />
        <BooleanToVisibilityConverter x:Key="BoolToVis" />
        <RoutedUICommand x:Key="cmdSelectHamburgerMenu" />
        <Style x:Key="StyleGridLA2Upg" TargetType="{x:Type Grid}">
        </Style>
        <Style x:Key="StyleGridConfFB" TargetType="{x:Type Grid}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding UserData.UserType}" Value="{x:Static business:lkpUserType.SalesAgent}" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding UserData.UserType}" Value="{x:Static business:lkpUserType.DataCapturer}" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding UserData.UserType}" Value="{x:Static business:lkpUserType.StatusLoader}" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="False" />
                    <Setter Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleXMEValueChanged"
        BasedOn="{StaticResource medINLA}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Value="False">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource ObjectCompareConverter}" ConverterParameter="==">
                                    <MultiBinding.Bindings>
                                        <Binding Path="(igWPF:ValueEditor.Text)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(data:AttachedProperties.HistoryValue)" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="data:AttachedProperties.IsValueChanged" Value="true" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleXMEValueChangedAndUpgDisabled"
        BasedOn="{StaticResource StyleXMEValueChanged}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource BrandedBrushIN_DisabledBackground}" />
                    <Setter Property="Foreground" Value="{StaticResource BrandedBrushIN_DisabledForeground}" />
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleXMEAddressValueChanged"
        BasedOn="{StaticResource medINLA}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Value="False">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource ObjectCompareConverter}" ConverterParameter="==">
                                    <MultiBinding.Bindings>
                                        <Binding Path="(igWPF:ValueEditor.Text)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(data:AttachedProperties.HistoryValue)" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="data:AttachedProperties.IsValueChanged" Value="true" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleINXamDateTimeEditorValueChanged1"
        BasedOn="{StaticResource INXamDateTimeEditorStyleLA1}"
        TargetType="{x:Type igWPF:XamDateTimeEditor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="True" />
                        <Condition Value="False">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource ObjectCompareConverter}" ConverterParameter="==">
                                    <MultiBinding.Bindings>
                                        <Binding Path="(igWPF:XamDateTimeEditor.Value)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(data:AttachedProperties.HistoryValue)" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="data:AttachedProperties.IsValueChanged" Value="true" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleDTECommenceDate"
        BasedOn="{StaticResource StyleINXamDateTimeEditorValueChanged1}"
        TargetType="{x:Type igWPF:XamDateTimeEditor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding UserData.UserType}" Value="{x:Static business:lkpUserType.SalesAgent}" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleXMEEmailAddress"
        BasedOn="{StaticResource medINLA}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding (igWPF:ValueEditor.IsValueValid), RelativeSource={RelativeSource Self}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="Red" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleXMEEmailAddressValueChanged"
        BasedOn="{StaticResource StyleXMEEmailAddress}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="True" />
                        <Condition Value="False">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource ObjectCompareConverter}" ConverterParameter="==">
                                    <MultiBinding.Bindings>
                                        <Binding Path="(igWPF:ValueEditor.Text)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(data:AttachedProperties.HistoryValue)" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="data:AttachedProperties.IsValueChanged" Value="true" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleXMETelNumber"
        BasedOn="{StaticResource medINLA}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Setters>
                <EventSetter Event="EditModeValidationError" Handler="xamEditor_EditModeValidationError" />
                <EventSetter Event="GotFocus" Handler="xamEditor_GotFocus" />
                <EventSetter Event="Loaded" Handler="xamEditor_Loaded" />
                <EventSetter Event="LostFocus" Handler="xamEditor_LostFocus" />
                <EventSetter Event="TextChanged" Handler="xamEditor_TextChanged" />
                <Setter Property="Mask" Value="###-###-####" />
                <Setter Property="PromptChar" Value="" />
                <Setter Property="ValueConstraint">
                    <Setter.Value>
                        <igWPF:ValueConstraint
                MaxLength="10"
                MinLength="10"
                Nullable="True" />
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding (igWPF:ValueEditor.IsValueValid), RelativeSource={RelativeSource Self}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="Red" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                    <Setter Property="Mask" Value="##########" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                    <Setter Property="Mask" Value="##########" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleXMETelNumberValueChanged"
        BasedOn="{StaticResource StyleXMETelNumber}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Value="False">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource ObjectCompareConverter}" ConverterParameter="==">
                                    <MultiBinding.Bindings>
                                        <Binding Path="(igWPF:ValueEditor.Text)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(data:AttachedProperties.HistoryValue)" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="data:AttachedProperties.IsValueChanged" Value="true" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="">
                    <Setter Property="Mask" Value="##########" />
                </DataTrigger>
                <DataTrigger Binding="{Binding Text, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                    <Setter Property="Mask" Value="##########" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleXMEIDNumber"
        BasedOn="{StaticResource medINLA}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Setters>
                <EventSetter Event="EditModeValidationError" Handler="xamEditor_EditModeValidationError" />
                <EventSetter Event="GotFocus" Handler="xamEditor_GotFocus" />
                <EventSetter Event="LostFocus" Handler="xamEditor_LostFocus" />
                <EventSetter Event="TextChanged" Handler="xamEditor_TextChanged" />
                <Setter Property="Mask" Value="#############" />
                <Setter Property="PromptChar" Value="" />
                <Setter Property="ValueConstraint">
                    <Setter.Value>
                        <igWPF:ValueConstraint
                MaxLength="13"
                MinLength="13"
                Nullable="True" />
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding (igWPF:ValueEditor.IsValueValid), RelativeSource={RelativeSource Self}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="Red" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleXMEIDNumberValueChanged"
        BasedOn="{StaticResource StyleXMEIDNumber}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="True" />
                        <Condition Value="False">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource ObjectCompareConverter}" ConverterParameter="==">
                                    <MultiBinding.Bindings>
                                        <Binding Path="(igWPF:ValueEditor.Text)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(data:AttachedProperties.HistoryValue)" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="data:AttachedProperties.IsValueChanged" Value="true" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="True" />
                        <Condition Binding="{Binding AppData.SolutionConfiguration, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpSolutionConfiguration.Training}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="True" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleXME2IDNumber"
        BasedOn="{StaticResource medINLA}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Setters>
                <EventSetter Event="EditModeValidationError" Handler="xamEditor_EditModeValidationError" />
                <EventSetter Event="GotFocus" Handler="xamEditor_GotFocus" />
                <EventSetter Event="LostFocus" Handler="xamEditor_LostFocus" />
                <EventSetter Event="TextChanged" Handler="xamEditor_TextChanged" />
                <Setter Property="Mask" Value="#############" />
                <Setter Property="PromptChar" Value="" />
                <Setter Property="ValueConstraint">
                    <Setter.Value>
                        <igWPF:ValueConstraint
                MaxLength="13"
                MinLength="13"
                Nullable="True" />
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding IsChecked, ElementName=chkLA2}" Value="True" />
                        <!--
                            <Condition
                            Binding="{Binding (igWPF:ValueEditor.IsValueValid), RelativeSource={RelativeSource Self}}"
                            Value="False" />
                        -->
                        <Condition Binding="{Binding Path=(igWPF:XamMaskedEditor.Text), RelativeSource={RelativeSource Self}}" Value="{x:Static sys:String.Empty}" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="Red" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleXME2IDNumberValueChanged"
        BasedOn="{StaticResource StyleXME2IDNumber}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="True" />
                        <Condition Value="False">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource ObjectCompareConverter}" ConverterParameter="==">
                                    <MultiBinding.Bindings>
                                        <Binding Path="(igWPF:ValueEditor.Text)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(data:AttachedProperties.HistoryValue)" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="data:AttachedProperties.IsValueChanged" Value="true" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--  StyleXMEPassportNumber  -->
        <Style
        x:Key="StyleXMEPassportNumber"
        BasedOn="{StaticResource medINLA}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Setters>
                <EventSetter Event="EditModeValidationError" Handler="xamEditor_EditModeValidationError" />
                <EventSetter Event="GotFocus" Handler="xamEditor_GotFocus" />
                <EventSetter Event="LostFocus" Handler="xamEditor_LostFocus" />
                <EventSetter Event="TextChanged" Handler="xamEditor_TextChanged" />
                <Setter Property="Mask" Value="aaaaaa999999999999" />
                <Setter Property="PromptChar" Value="" />
                <Setter Property="ValueConstraint">
                    <Setter.Value>
                        <igWPF:ValueConstraint MinLength="7" Nullable="True" />
                    </Setter.Value>
                </Setter>
            </Style.Setters>
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding (igWPF:ValueEditor.IsValueValid), RelativeSource={RelativeSource Self}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="Red" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleXMEPassportNumberValueChanged"
        BasedOn="{StaticResource StyleXMEPassportNumber}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="True" />
                        <Condition Value="False">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource ObjectCompareConverter}" ConverterParameter="==">
                                    <MultiBinding.Bindings>
                                        <Binding Path="(igWPF:ValueEditor.Text)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(data:AttachedProperties.HistoryValue)" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="data:AttachedProperties.IsValueChanged" Value="true" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--  StyleClosureCheckbox  -->
        <Style
        x:Key="StyleClosureCheckbox"
        BasedOn="{StaticResource INCheckboxStyle}"
        TargetType="{x:Type CheckBox}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.lkpLeadStatus, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINLeadStatus.Accepted}}" Value="False" />
                        <Condition Binding="{Binding AppData.lkpLeadStatus, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINLeadStatus.CarriedForward}}" Value="False" />
                        <Condition Binding="{Binding AppData.lkpLeadStatus, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINLeadStatus.CallMonitoringCarriedForward}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="DarkSlateGray" />
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--  StyleFuneralDetailsBorder  -->
        <Style x:Key="StyleFuneralDetailsBorder" TargetType="{x:Type Border}">
            <Style.Triggers>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>

                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.CampaignType, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINCampaignType.Cancer}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.CampaignType, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINCampaignType.Macc}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.CampaignType, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINCampaignType.AccDis}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.CampaignType, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINCampaignType.MaccMillion}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.CampaignType, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINCampaignType.MaccCancer}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.CampaignType, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINCampaignType.MaccMillionCancer}}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>

            </Style.Triggers>
        </Style>

        <!--  StyleConfirmCheckbox  -->
        <Style
        x:Key="StyleConfirmCheckbox"
        BasedOn="{StaticResource INCheckboxStyle}"
        TargetType="{x:Type CheckBox}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding UserData.UserType}" Value="{x:Static business:lkpUserType.SalesAgent}" />
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="DarkSlateGray" />
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding UserData.UserType}" Value="{x:Static business:lkpUserType.DataCapturer}" />
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="DarkSlateGray" />
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--  StyleBumpUpUDMCheckbox  -->
        <Style
        x:Key="StyleBumpUpUDMCheckbox"
        BasedOn="{StaticResource INCheckboxStyle}"
        TargetType="{x:Type CheckBox}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding UserData.UserType}" Value="{x:Static business:lkpUserType.SalesAgent}" />
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="DarkSlateGray" />
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding UserData.UserType}" Value="{x:Static business:lkpUserType.DataCapturer}" />
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="DarkSlateGray" />
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--  StyleXMELA2Details  -->
        <Style
        x:Key="StyleXMELA2Details"
        BasedOn="{StaticResource medINLA}"
        TargetType="{x:Type igWPF:XamMaskedEditor}">
            <EventSetter Event="GotFocus" Handler="xamEditor_GotFocus" />
            <EventSetter Event="LostFocus" Handler="xamEditor_LostFocus" />
            <Setter Property="Mask" Value="" />
            <Setter Property="PromptChar" Value="" />
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding IsChecked, ElementName=chkLA2}" Value="True" />
                        <Condition Binding="{Binding Path=(igWPF:XamMaskedEditor.Text), RelativeSource={RelativeSource Self}}" Value="{x:Static sys:String.Empty}" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="Red" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--  StyleChildDOB  -->
        <Style
        x:Key="StyleChildDOB"
        BasedOn="{StaticResource INXamDateTimeEditorStyleLA1}"
        TargetType="{x:Type igWPF:XamDateTimeEditor}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding UserData.UserType}" Value="{x:Static business:lkpUserType.SalesAgent}" />
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource BrandedBrushIN_DisabledBackground}" />
                    <Setter Property="BorderBrush" Value="{StaticResource BrandedBrushIN_DisabledBorder}" />
                    <Setter Property="Foreground" Value="{StaticResource BrandedBrushIN_DisabledForeground}" />
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding UserData.UserType}" Value="{x:Static business:lkpUserType.DataCapturer}" />
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="{StaticResource BrandedBrushIN_DisabledBackground}" />
                    <Setter Property="BorderBrush" Value="{StaticResource BrandedBrushIN_DisabledBorder}" />
                    <Setter Property="Foreground" Value="{StaticResource BrandedBrushIN_DisabledForeground}" />
                    <Setter Property="IsEnabled" Value="False" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--  SaveButton  -->
        <Style
        x:Key="SaveButton"
        BasedOn="{StaticResource INFlatButton}"
        TargetType="{x:Type Button}">
        
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                x:Name="ButtonBorder"
                Background="{StaticResource BrandedBrushIN_light}"
                BorderBrush="{StaticResource BrandedBrushIN}"
                BorderThickness="2"
                CornerRadius="4"
                RenderTransformOrigin="0.5,0.5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="1.5*" />
                                </Grid.RowDefinitions>
                                <Border
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    CornerRadius="4,4,0,0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0" Color="#55FFFFFF" />
                                            <GradientStop Offset="1" Color="{StaticResource BrandedColourIN}" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter
                    x:Name="ButtonContentPresenter"
                    Grid.Row="0"
                    Grid.RowSpan="2"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource BrandedBrushIN_mediumlight}" />
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource BrandedBrushIN}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource BrandedBrushIN}" />
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource BrandedBrushIN_mediumlight}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{StaticResource BrandedBrushIN_dark}" />
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{StaticResource BrandedBrushIN}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="ButtonBorder" Property="Background" Value="LightGray" />
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="LightGray" />
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="ToolTip" Value="{x:Null}" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        </Style>

        <Style
        x:Key="DebiCheck"
        BasedOn="{StaticResource INFlatButton}"
        TargetType="{x:Type Button}">
            <Setter Property="ToolTip" Value="{x:Null}" />
            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
        </Style>
        <Style
        x:Key="StyleCHKLA2"
        BasedOn="{StaticResource INCheckboxStyle}"
        TargetType="{x:Type CheckBox}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding ElementName=cmbLA1Cover, Path=SelectedValue}" Value="{x:Null}" />

                    </MultiDataTrigger.Conditions>
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--  ComboBox  -->
        <Style
        x:Key="StyleCMBValidate"
        BasedOn="{StaticResource cmbINLA}"
        TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding (ComboBox.SelectedValue), RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="Red" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleCMBValidateSigningPower"
        BasedOn="{StaticResource cmbINLA}"
        TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding (ComboBox.SelectedValue), RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                        <Condition Binding="{Binding AppData.CampaignGroup, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINCampaignGroup.Rejuvenation}}" Value="False" />
                        <Condition Binding="{Binding AppData.CampaignGroup, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINCampaignGroup.Defrosted}}" Value="False" />
                        <Condition Binding="{Binding AppData.CampaignGroup, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINCampaignGroup.ReDefrost}}" Value="False" />
                        <Condition Binding="{Binding AppData.CampaignGroup, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINCampaignGroup.Reactivation}}" Value="False" />
                        <Condition Binding="{Binding AppData.CampaignType, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINCampaignType.IGCancer}}" Value="False" />
                        <Condition Binding="{Binding AppData.CampaignGroup, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpINCampaignGroup.Resurrection}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="Red" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleCMBValidateLA2"
        BasedOn="{StaticResource cmbINLA}"
        TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding IsChecked, ElementName=chkLA2}" Value="True" />
                        <Condition Binding="{Binding (ComboBox.SelectedValue), RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="Red" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleCMBValueChanged"
        BasedOn="{StaticResource cmbINLA}"
        TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <!--<Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="True" />-->
                        <Condition Value="False">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource ObjectCompareConverter}" ConverterParameter="==">
                                    <MultiBinding.Bindings>
                                        <Binding Path="(src:EmbriantComboBox.SelectedValue)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(data:AttachedProperties.HistoryValue)" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="data:AttachedProperties.IsValueChanged" Value="true" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>
        <Style
        x:Key="StyleCMBValidateValueChanged"
        BasedOn="{StaticResource StyleCMBValidate}"
        TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="True" />
                        <Condition Value="False">
                            <Condition.Binding>
                                <MultiBinding Converter="{StaticResource ObjectCompareConverter}" ConverterParameter="==">
                                    <MultiBinding.Bindings>
                                        <Binding Path="(src:EmbriantComboBox.SelectedValue)" RelativeSource="{RelativeSource Self}" />
                                        <Binding Path="(data:AttachedProperties.HistoryValue)" RelativeSource="{RelativeSource Self}" />
                                    </MultiBinding.Bindings>
                                </MultiBinding>
                            </Condition.Binding>
                        </Condition>
                    </MultiDataTrigger.Conditions>
                    <Setter Property="Background" Value="Yellow" />
                    <Setter Property="data:AttachedProperties.IsValueChanged" Value="true" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <Style
        x:Key="StyleCMBStatus"
        BasedOn="{StaticResource cmbINLA}"
        TargetType="{x:Type ComboBox}">
            <Style.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                        <Condition Binding="{Binding (ComboBox.SelectedValue), RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="BorderBrush" Value="Red" />
                </MultiDataTrigger>
            </Style.Triggers>
        </Style>

        <!--  XamMaskedEditor  -->
        <!--  INDTE1Validate  -->
        <Style
        x:Key="INDTE1Validate"
        BasedOn="{StaticResource INXamDateTimeEditorStyleLA1}"
        TargetType="{x:Type igWPF:XamDateTimeEditor}">
            <Setter Property="EditTemplate">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type igWPF:XamDateTimeEditor}">
                        <Border
                x:Name="MainBorder"
                Background="White"
                BorderBrush="Gray"
                BorderThickness="{StaticResource INBorderThickness1}"
                CornerRadius="4">
                            <Grid>
                                <ToggleButton
                    x:Name="PART_DropDownButton"
                    HorizontalAlignment="Stretch"
                    ClickMode="Press"
                    Focusable="False"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                    Template="{StaticResource INToggleButton}" />
                                <Popup
                    x:Name="PART_Popup"
                    igWPF:PopupHelper.DropDownButton="{Binding ElementName=PART_DropDownButton}"
                    AllowsTransparency="True"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    StaysOpen="False">
                                    <Viewbox
                      Width="200"
                      Height="200"
                      Stretch="Uniform">
                                        <themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                            <Border
                          Padding="1"
                          Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}"
                          BorderBrush="{StaticResource {x:Static SystemColors.WindowFrameBrushKey}}"
                          BorderThickness="1"
                          CornerRadius="4">
                                                <igWPF:XamMonthCalendar
                            x:Name="PART_Calendar"
                            MaxDate="{TemplateBinding ComputedMaxDate}"
                            MinCalendarMode="{TemplateBinding ComputedMinCalendarMode}"
                            MinDate="{TemplateBinding ComputedMinDate}"
                            SelectedDate="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource INXamMonthCalendarStyle1}" />
                                            </Border>
                                        </themes:SystemDropShadowChrome>
                                    </Viewbox>
                                </Popup>
                                <igWPF:CardPanel x:Name="PART_FocusSite">
                                    <igWPF:SectionsList
                      x:Name="SectionsList"
                      Margin="{TemplateBinding Padding}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      FlowDirection="LeftToRight"
                      Foreground="{TemplateBinding Foreground}"
                      InputMethod.IsInputMethodEnabled="{TemplateBinding InputMethod.IsInputMethodEnabled}"
                      InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" />
                                    <TextBox
                      x:Name="PART_InputTextBox"
                      Width="Auto"
                      Margin="1,0,0,0"
                      HorizontalAlignment="Left"
                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                      Background="Transparent"
                      BorderBrush="Transparent"
                      BorderThickness="0"
                      Foreground="{TemplateBinding Foreground}"
                      InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}"
                      SelectionBrush="{StaticResource BrandedBrushIN}"
                      Visibility="Collapsed">
                                        <TextBox.TextAlignment>
                                            <Binding Path="HorizontalContentAlignment" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <igWPF:HorizontalToTextAlignmentConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </TextBox.TextAlignment>
                                    </TextBox>
                                </igWPF:CardPanel>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                                <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                                <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            </Trigger>
                            <Trigger Property="IsEmbedded" Value="False" />
                            <Trigger Property="IsInEditMode" Value="True">
                                <Setter TargetName="SectionsList" Property="IsTabStop" Value="False" />
                                <Setter TargetName="PART_InputTextBox" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsTextBoxEntryEnabled" Value="True">
                                <Setter TargetName="SectionsList" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}" />
                                <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BrandedBrushIN_light}" />
                            </Trigger>
                            <Trigger Property="IsFocusWithin" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource FocusedEditorBackgroundBrush1}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=(IsValueValid), RelativeSource={RelativeSource Self}}" Value="False" />
                                    <Condition Binding="{Binding Tag, ElementName=DimBorder}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="Red" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding (Value), RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                                    <!--  business:lkpINLeadStatus.Accepted  -->
                                    <Condition Binding="{Binding SelectedValue, ElementName=cmbStatus}" Value="1" />
                                    <Condition Binding="{Binding Tag, ElementName=DimBorder}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="Red" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type igWPF:XamDateTimeEditor}">
                        <Border
                x:Name="MainBorder"
                Background="White"
                BorderBrush="Gray"
                BorderThickness="{StaticResource INBorderThickness1}"
                CornerRadius="4">
                            <Grid>
                                <ToggleButton
                    x:Name="PART_DropDownButton"
                    HorizontalAlignment="Stretch"
                    ClickMode="Press"
                    Focusable="False"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                    Template="{StaticResource INToggleButton}"
                    Visibility="{TemplateBinding DropDownButtonVisibility}" />
                                <TextBlock
                    x:Name="TextBlock"
                    Margin="4,0,0,0"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Text="{TemplateBinding DisplayText}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEmbedded" Value="False">
                                <Setter Property="Padding" Value="4,2" />
                                <Setter Property="igWPF:SimpleTextBlock.OptimizeWidthMeasurement" Value="False" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}" />
                                <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BrandedBrushIN_light}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding (Value), RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                                    <Condition Binding="{Binding SelectedValue, ElementName=cmbStatus}" Value="1" />
                                    <Condition Binding="{Binding Tag, ElementName=DimBorder}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="Red" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--  INDTE2Validate  -->
        <!--  Exactly like INDTE2Validate, minus the cmbStatus.SelectedValue == 1 MultiDataTrigger condition  -->
        <Style
        x:Key="INDTE2Validate"
        BasedOn="{StaticResource INXamDateTimeEditorStyleLA1}"
        TargetType="{x:Type igWPF:XamDateTimeEditor}">
            <Setter Property="EditTemplate">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type igWPF:XamDateTimeEditor}">
                        <Border
                x:Name="MainBorder"
                Background="White"
                BorderBrush="Gray"
                BorderThickness="{StaticResource INBorderThickness1}"
                CornerRadius="4">
                            <Grid>
                                <ToggleButton
                    x:Name="PART_DropDownButton"
                    HorizontalAlignment="Stretch"
                    ClickMode="Press"
                    Focusable="False"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                    Template="{StaticResource INToggleButton}" />
                                <Popup
                    x:Name="PART_Popup"
                    igWPF:PopupHelper.DropDownButton="{Binding ElementName=PART_DropDownButton}"
                    AllowsTransparency="True"
                    IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                    PopupAnimation="{StaticResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}"
                    StaysOpen="False">
                                    <Viewbox
                      Width="200"
                      Height="200"
                      Stretch="Uniform">
                                        <themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent">
                                            <Border
                          Padding="1"
                          Background="{StaticResource {x:Static SystemColors.WindowBrushKey}}"
                          BorderBrush="{StaticResource {x:Static SystemColors.WindowFrameBrushKey}}"
                          BorderThickness="1"
                          CornerRadius="4">
                                                <igWPF:XamMonthCalendar
                            x:Name="PART_Calendar"
                            MaxDate="{TemplateBinding ComputedMaxDate}"
                            MinCalendarMode="{TemplateBinding ComputedMinCalendarMode}"
                            MinDate="{TemplateBinding ComputedMinDate}"
                            SelectedDate="{Binding DateValue, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            Style="{StaticResource INXamMonthCalendarStyle1}" />
                                            </Border>
                                        </themes:SystemDropShadowChrome>
                                    </Viewbox>
                                </Popup>
                                <igWPF:CardPanel x:Name="PART_FocusSite">
                                    <igWPF:SectionsList
                      x:Name="SectionsList"
                      Margin="{TemplateBinding Padding}"
                      HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                      FlowDirection="LeftToRight"
                      Foreground="{TemplateBinding Foreground}"
                      InputMethod.IsInputMethodEnabled="{TemplateBinding InputMethod.IsInputMethodEnabled}"
                      InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}" />
                                    <TextBox
                      x:Name="PART_InputTextBox"
                      Width="Auto"
                      Margin="1,0,0,0"
                      HorizontalAlignment="Left"
                      HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                      VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                      Background="Transparent"
                      BorderBrush="Transparent"
                      BorderThickness="0"
                      Foreground="{TemplateBinding Foreground}"
                      InputMethod.PreferredImeState="{TemplateBinding InputMethod.PreferredImeState}"
                      SelectionBrush="{StaticResource BrandedBrushIN}"
                      Visibility="Collapsed">
                                        <TextBox.TextAlignment>
                                            <Binding Path="HorizontalContentAlignment" RelativeSource="{RelativeSource TemplatedParent}">
                                                <Binding.Converter>
                                                    <igWPF:HorizontalToTextAlignmentConverter />
                                                </Binding.Converter>
                                            </Binding>
                                        </TextBox.TextAlignment>
                                    </TextBox>
                                </igWPF:CardPanel>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger SourceName="PART_Popup" Property="HasDropShadow" Value="True">
                                <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                                <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            </Trigger>
                            <Trigger Property="IsEmbedded" Value="False" />
                            <Trigger Property="IsInEditMode" Value="True">
                                <Setter TargetName="SectionsList" Property="IsTabStop" Value="False" />
                                <Setter TargetName="PART_InputTextBox" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsTextBoxEntryEnabled" Value="True">
                                <Setter TargetName="SectionsList" Property="Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}" />
                                <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BrandedBrushIN_light}" />
                            </Trigger>
                            <Trigger Property="IsFocusWithin" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource FocusedEditorBackgroundBrush1}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding (IsValueValid), RelativeSource={RelativeSource Self}}" Value="False" />
                                    <Condition Binding="{Binding Tag, ElementName=DimBorder}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="Red" />
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding (Value), RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                                    <!--  business:lkpINLeadStatus.Accepted  -->
                                    <Condition Binding="{Binding SelectedValue, ElementName=cmbStatus}" Value="1" />
                                    <Condition Binding="{Binding Tag, ElementName=DimBorder}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="Red" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type igWPF:XamDateTimeEditor}">
                        <Border
                x:Name="MainBorder"
                Background="White"
                BorderBrush="Gray"
                BorderThickness="{StaticResource INBorderThickness1}"
                CornerRadius="4">
                            <Grid>
                                <ToggleButton
                    x:Name="PART_DropDownButton"
                    HorizontalAlignment="Stretch"
                    ClickMode="Press"
                    Focusable="False"
                    IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                    Template="{StaticResource INToggleButton}"
                    Visibility="{TemplateBinding DropDownButtonVisibility}" />
                                <TextBlock
                    x:Name="TextBlock"
                    Margin="4,0,0,0"
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    Text="{TemplateBinding DisplayText}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEmbedded" Value="False">
                                <Setter Property="Padding" Value="4,2" />
                                <Setter Property="igWPF:SimpleTextBlock.OptimizeWidthMeasurement" Value="False" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{DynamicResource EditorsBrushKeys.CheckBoxNormalOuterBoxCenterFillKey}" />
                                <Setter Property="BorderBrush" Value="{DynamicResource EditorsBrushKeys.TextEditorBorderBrushKey}" />
                                <Setter Property="Foreground" Value="{DynamicResource EditorsBrushKeys.TextEditorForegroundKey}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BrandedBrushIN_light}" />
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsChecked, ElementName=chkLA2}" Value="True" />
                                    <Condition Binding="{Binding (Value), RelativeSource={RelativeSource Self}}" Value="{x:Null}" />
                                    <Condition Binding="{Binding Tag, ElementName=DimBorder}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter TargetName="MainBorder" Property="BorderBrush" Value="Red" />
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--  INLabelSelect  -->
        <Style
        x:Key="INLabelSelect"
        BasedOn="{StaticResource INLabelText2}"
        TargetType="{x:Type TextBlock}">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Cursor" Value="Hand" />
                    <!--  <Setter Property="FontWeight" Value="Bold" />  -->
                </Trigger>
            </Style.Triggers>
        </Style>

    </src:BaseControl.Resources>

    <src:BaseControl.CommandBindings>
        <CommandBinding
        CanExecute="SelectHamburgerMenuCommand_CanExecute"
        Command="{StaticResource cmdSelectHamburgerMenu}"
        Executed="SelectHamburgerMenuCommand_Executed" />
        <CommandBinding
        CanExecute="SaveCommand_CanExecute"
        Command="commands:CustomCommands.Save"
        Executed="SaveCommand_Executed" />
        <!--<CommandBinding CanExecute="NotesCommand_CanExecute"
                        Command="{StaticResource cmdNotes}"
                        Executed="NotesCommand_Executed" />-->
    </src:BaseControl.CommandBindings>

    <src:BaseControl.InputBindings>
        <KeyBinding
        Key="H"
        Command="{StaticResource cmdSelectHamburgerMenu}"
        Modifiers="Alt" />
    </src:BaseControl.InputBindings>
    <Viewbox Stretch="Uniform">
        <Border
  x:Name="DimBorder"
  Width="1200"
  Height="800"
  BorderBrush="Transparent"
  BorderThickness="0"
  CornerRadius="12"
  Opacity="1"
  Tag="{Binding Path=AppData.IsLeadLoaded}">
            <Border.Style>
                <Style>
                    <Setter Property="Border.Background" Value="Transparent" />
                    <Style.Triggers>
                        <Trigger Property="Border.IsEnabled" Value="False">
                            <Setter Property="Border.Background" Value="Gray" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Border
x:Name="MainBorder"
Background="Black"
BorderBrush="{StaticResource BrandedBrushIN}"
BorderThickness="2"
CornerRadius="12"
Tag="{Binding AppData.ImportID}">
                <Border.Style>
                    <Style>
                        <Setter Property="Border.Opacity" Value="1" />
                        <Style.Triggers>
                            <Trigger Property="Border.IsEnabled" Value="False">
                                <Setter Property="Border.Opacity" Value="0.7" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid x:Name="LayoutRoot">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="42*" />
                        <RowDefinition Height="42*" />
                        <RowDefinition Height="42*" />
                        <RowDefinition Height="42*" />
                        <RowDefinition Height="43*" />
                        <RowDefinition Height="42*" />
                        <RowDefinition Height="42*" />
                        <RowDefinition Height="42*" />
                        <RowDefinition Height="42*" />
                        <RowDefinition Height="42*" />
                        <RowDefinition Height="41.568" />
                        <RowDefinition Height="42*" />
                        <RowDefinition Height="42*" />
                        <RowDefinition Height="43*" />
                        <RowDefinition Height="43*" />
                        <RowDefinition Height="43*" />
                        <RowDefinition Height="44" />
                        <RowDefinition Height="42*" />
                        <RowDefinition Height="42*" />

                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="42*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="42*" />
                        <ColumnDefinition Width="42*" />
                        <ColumnDefinition Width="42*" />
                        <ColumnDefinition Width="42*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="42*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="42*" />
                        <ColumnDefinition Width="42*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                        <ColumnDefinition Width="43*" />
                    </Grid.ColumnDefinitions>
                    <Button
x:Name="btnHamburgerMenu"
Grid.Row="0"
Grid.RowSpan="2"
Grid.Column="0"
Grid.ColumnSpan="2"
Width="28"
Height="28"
Margin="12,12"
HorizontalAlignment="Left"
VerticalAlignment="Top"
BorderThickness="0"
IsTabStop="True"
TabIndex="98100">
                        <content:Hamburger />
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="DimGray" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <ig:ContextMenuService.Manager>
                            <ig:ContextMenuManager x:Name="contextMenuManager" OpenMode="LeftClick">
                                <ig:ContextMenuManager.ContextMenu>
                                    <ig:XamContextMenu
        FontSize="16"
        ItemClicked="XamContextMenu_ItemClicked"
        ItemContainerStyle="{StaticResource INMenuItemStyle}"
        Placement="AlignedToTheRight"
        ShouldRightClickBeHandled="False"
        Style="{StaticResource DarkContextMenuStyle}">
                                        <ig:XamMenuItem
          Click="XamMenuItem_Click"
          GotFocus="XamMenuItem_GotFocus"
          Header="Web Gift Status"
          IsEnabled="True"
          LostFocus="XamMenuItem_LostFocus"
          PreviewGotKeyboardFocus="XamMenuItem_PreviewGotKeyboardFocus">
                                            <ig:XamMenuItem.Icon>
                                                <Image
              Width="24"
              Height="24"
              Source="../Resources/Icons/blog.png" />
                                            </ig:XamMenuItem.Icon>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuItem
          Click="XamMenuItem_Click"
          GotFocus="XamMenuItem_GotFocus"
          Header="Lead Contact Details"
          IsEnabled="True"
          LostFocus="XamMenuItem_LostFocus"
          PreviewGotKeyboardFocus="XamMenuItem_PreviewGotKeyboardFocus">
                                            <ig:XamMenuItem.Icon>
                                                <Image
              Width="24"
              Height="24"
              Source="../Resources/Icons/blog.png" />
                                            </ig:XamMenuItem.Icon>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuItem
          Click="XamMenuItem_Click"
          Header="Objection Information"
          IsEnabled="True">
                                            <ig:XamMenuItem.Icon>
                                                <Image
              Width="24"
              Height="24"
              Source="../Resources/Icons/blog.png" />
                                            </ig:XamMenuItem.Icon>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuItem
          Click="XamMenuItem_Click"
          Header="Claim Information"
          IsEnabled="True">
                                            <ig:XamMenuItem.Icon>
                                                <Image
              Width="24"
              Height="24"
              Source="../Resources/Icons/blog.png" />
                                            </ig:XamMenuItem.Icon>
                                        </ig:XamMenuItem>
                                        <ig:XamMenuItem
          Click="XamMenuItem_Click"
          GotFocus="XamMenuItem_GotFocus"
          Header="Debi-check Statuses"
          IsEnabled="True"
          LostFocus="XamMenuItem_LostFocus"
          PreviewGotKeyboardFocus="XamMenuItem_PreviewGotKeyboardFocus">
                                            <ig:XamMenuItem.Icon>
                                                <Image
              Width="24"
              Height="24"
              Source="../Resources/Icons/blog.png" />
                                            </ig:XamMenuItem.Icon>
                                        </ig:XamMenuItem>

                                        <ig:XamMenuItem
          Click="XamMenuItem_Click"
          GotFocus="XamMenuItem_GotFocus"
          Header="Debi-check Agent Overtime"
          IsEnabled="True"
          LostFocus="XamMenuItem_LostFocus"
          PreviewGotKeyboardFocus="XamMenuItem_PreviewGotKeyboardFocus">
                                            <ig:XamMenuItem.Icon>
                                                <Image
              Width="24"
              Height="24"
              Source="../Resources/Icons/blog.png" />
                                            </ig:XamMenuItem.Icon>
                                        </ig:XamMenuItem>

                                        <ig:XamMenuItem
          Click="XamMenuItem_Click"
          Header="Exclusion Information"
          IsEnabled="{Binding AppData.IsLeadLoaded}">
                                            <ig:XamMenuItem.Icon>
                                                <Image
              Width="24"
              Height="24"
              Source="../Resources/Icons/blog.png" />
                                            </ig:XamMenuItem.Icon>
                                        </ig:XamMenuItem>

                                        <ig:XamMenuItem
          Click="XamMenuItem_Click"
          Header="Call Monitoring Details"
          IsEnabled="{Binding AppData.CanManageCallMonitoringDetails}">
                                            <ig:XamMenuItem.Icon>
                                                <Image
              Width="24"
              Height="24"
              Source="../Resources/Icons/blog.png" />
                                            </ig:XamMenuItem.Icon>
                                        </ig:XamMenuItem>

                                        <ig:XamMenuItem
          Click="XamMenuItem_Click"
          Header="QA Details"
          IsEnabled="{Binding AppData.CanManageQADetails}">
                                            <ig:XamMenuItem.Icon>
                                                <Image
              Width="24"
              Height="24"
              Source="../Resources/Icons/blog.png" />
                                            </ig:XamMenuItem.Icon>
                                        </ig:XamMenuItem>


                                    </ig:XamContextMenu>
                                </ig:ContextMenuManager.ContextMenu>
                            </ig:ContextMenuManager>
                        </ig:ContextMenuService.Manager>
                    </Button>
                    <Button
x:Name="btnClose"
Grid.Row="0"
Grid.Column="27"
Click="btnClose_Click"
IsTabStop="True"
Style="{StaticResource INCloseButton}"
TabIndex="99000" />
                    <TextBlock
              x:Name="hdrLeadApplication"
              Grid.Row="1"
              Grid.Column="2"
              Grid.ColumnSpan="6"
              Margin="0"
              VerticalAlignment="Top"
              Style="{StaticResource INPageHeadingText1}"
              Text="Prime Lead Application" Grid.RowSpan="2" Width="234" />
                    <Path
              x:Name="hdrLine"
              Grid.Row="1"
              Grid.Column="2"
              Grid.ColumnSpan="6"
              Width="224"
              Margin="0,0,0,14"
              HorizontalAlignment="Left"
              Style="{StaticResource INUnderlineText1}" Stretch="Fill" />
                    <TextBlock
              x:Name="lblPage2"
              Grid.Row="1"
              Grid.Column="6"
              Grid.ColumnSpan="10"
              Margin="0"
              VerticalAlignment="Top"
              Style="{StaticResource INPageHeadingText1}"
              Text="{Binding ElementName=lblPage, Path=Text}" />
                    <TextBlock
              x:Name="lblStatus"
              Grid.Row="1"
              Grid.Column="17"
              Grid.ColumnSpan="2"
              Margin="0,6,8,0"
              HorizontalAlignment="Right"
              VerticalAlignment="Top"
              Style="{StaticResource INLabelText2}"
              Text="Status" />
                    <src:EmbriantComboBox
              x:Name="cmbStatus"
              Grid.Row="1"
              Grid.Column="19"
              Grid.ColumnSpan="7"
              Margin="0"
              HorizontalAlignment="Stretch"
              VerticalAlignment="Top"
              DropDownClosed="cmbStatus_DropDownClosed"
              IsEnabled="{Binding AppData.CanChangeStatus}"
              MouseDoubleClick="cmbStatus_MouseDoubleClick"
              PreviewKeyDown="EmbriantComboBox_PreviewKeyDown"
              PreviewMouseLeftButtonDown="cmbStatus_PreviewMouseLeftButtonDown"
              SelectedValue="{Binding AppData.LeadStatus}"
              SelectionChanged="cmbStatus_SelectionChanged"
              Style="{StaticResource StyleCMBStatus}"
              TabIndex="98000" />
                    <TextBlock
x:Name="lblClientName"
Grid.Row="2"
Grid.Column="2"
Grid.ColumnSpan="4"
Margin="0,6,8,0"
VerticalAlignment="Top"
Style="{StaticResource INLabelText2}"
Text="Client" />
                    <igWPF:XamMaskedEditor
x:Name="medClientName"
Grid.Row="2"
Grid.Column="6"
Grid.ColumnSpan="7"
Margin="0"
HorizontalAlignment="Stretch"
VerticalAlignment="Top"
GotFocus="xamEditor_GotFocus"
IsEnabled="False"
LostFocus="xamEditor_LostFocus"
Mask=""
PromptChar=""
Style="{StaticResource medINLA}"
TabIndex="0"
Text="{Binding LeadData.FullName}" />

                    <TextBlock
x:Name="lblReference"
Grid.Row="2"
Grid.Column="16"
Grid.ColumnSpan="3"
Margin="0,6,8,0"
HorizontalAlignment="Right"
VerticalAlignment="Top"
Style="{StaticResource INLabelText2}"
Text="Reference" />
                    <igWPF:XamMaskedEditor
x:Name="medReference"
Grid.Row="2"
Grid.Column="19"
Grid.ColumnSpan="5"
Margin="0,0,3,0"
HorizontalAlignment="Stretch"
VerticalAlignment="Top"
GotFocus="xamEditor_GotFocus"
Loaded="medReference_Loaded"
Mask="{}{char:48:0-9a-zA-Z_}"
PreviewKeyDown="medReference_PreviewKeyDown"
PromptChar=""
Style="{StaticResource medINLA}"
TabIndex="12000"
Text="{Binding AppData.RefNo, Mode=Default}" />
                    <Button
x:Name="btnPrevLead"
Grid.Row="2"
Grid.Column="24"
Width="Auto"
Margin="0,0,1,0"
HorizontalAlignment="Stretch"
VerticalAlignment="Top"
Click="btnPrevLead_Click"
TabIndex="0">
                        <Button.Style>
                            <Style BasedOn="{StaticResource INFlatButton}" TargetType="Button">
                                <Style.Triggers>
                                    <!--<MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding AppData.IsLeadLoaded}"
                                         Value="False" />
                          </MultiDataTrigger.Conditions>
                          <Setter Property="IsEnabled" Value="False" />
                      </MultiDataTrigger>-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding AppData2.ImportIDPrevLead}" Value="{x:Null}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Grid Margin="3">
                            <Path
    x:Name="PathArrowPrev"
    HorizontalAlignment="Stretch"
    VerticalAlignment="Stretch"
    Data="F1 M 85.3218,707.328L 84.5658,708.088L 65.4685,708.088C 64.7618,708.088 64.1872,708.66 64.1872,709.368C 64.1872,710.077 64.7618,710.649 65.4685,710.649L 74.7031,710.649L 74.7031,713.376L 73.7778,714.238C 73.5365,713.996 73.2125,713.861 72.8725,713.861L 66.7512,713.861C 66.0445,713.861 65.4685,714.436 65.4685,715.142C 65.4685,715.85 66.0445,716.428 66.7512,716.428L 71.5898,716.428L 71.5898,719.26L 71.0311,719.82C 70.8338,719.7 70.6045,719.633 70.3645,719.633L 63.1858,719.633C 62.4778,719.633 61.9045,720.206 61.9045,720.913C 61.9045,721.622 62.4778,722.196 63.1858,722.196L 68.0045,722.196L 67.4072,723.112L 63.9031,724.356L 51.4591,724.356C 51.3245,724.24 51.1645,724.146 50.9872,724.093L 45.6485,722.496C 45.5018,722.272 45.2858,722.094 45.0232,721.998L 40.9645,720.5L 40.9645,704.08L 44.5805,704.08C 44.9205,704.08 45.2432,703.946 45.4858,703.704C 45.7272,703.464 45.8578,703.141 45.8578,702.8L 45.8578,702.121L 48.6618,702.121C 49.0032,702.121 49.3258,701.986 49.5672,701.746C 49.8098,701.505 49.9405,701.182 49.9405,700.841L 49.9405,700.002L 52.7392,700.002C 53.0805,700.002 53.4045,699.868 53.6458,699.621C 53.8872,699.381 54.0218,699.06 54.0218,698.721L 54.0218,697.877L 58.6178,697.877C 58.9578,697.877 59.2778,697.744 59.5232,697.502C 59.7645,697.26 59.8952,696.941 59.8952,696.597L 59.8952,695.758L 60.0845,695.758C 60.4258,695.758 60.7498,695.625 60.9911,695.377C 61.2325,695.135 61.3658,694.816 61.3658,694.476L 61.3658,693.472L 65.0071,693.472L 65.0071,697.601L 64.0018,697.601C 63.6605,697.601 63.3325,697.736 63.0952,697.976C 62.8538,698.214 62.7205,698.542 62.7205,698.882L 62.7205,701.025L 57.6378,701.025C 57.2965,701.025 56.9685,701.164 56.7325,701.402C 56.4898,701.644 56.3552,701.972 56.3552,702.307C 56.3552,702.652 56.4872,702.972 56.7325,703.213C 56.9711,703.456 57.2938,703.589 57.6378,703.589L 64.0018,703.589L 84.6845,703.589L 85.3218,704.225M 87.5125,702.792L 86.1231,701.402C 85.8831,701.164 85.5552,701.025 85.2178,701.025L 65.2818,701.025L 65.2818,700.161L 66.2871,700.165C 66.6272,700.165 66.9525,700.03 67.1938,699.789C 67.4338,699.544 67.5685,699.222 67.5685,698.882L 67.5685,692.189C 67.5685,691.85 67.4338,691.524 67.1938,691.285C 66.9525,691.042 66.6272,690.909 66.2871,690.909L 60.0845,690.909C 59.7458,690.909 59.4165,691.048 59.1791,691.285C 58.9378,691.521 58.8045,691.853 58.8045,692.189L 58.8045,693.19L 58.6178,693.194C 58.2778,693.194 57.9445,693.329 57.7085,693.572C 57.4711,693.809 57.3352,694.135 57.3352,694.476L 57.3352,695.314L 52.7392,695.314C 52.4045,695.314 52.0712,695.454 51.8338,695.69C 51.5965,695.928 51.4591,696.26 51.4591,696.597L 51.4591,697.438L 48.6618,697.438C 48.3218,697.438 47.9925,697.573 47.7525,697.814C 47.5152,698.053 47.3792,698.38 47.3792,698.721L 47.3792,699.56L 44.5805,699.56C 44.2392,699.56 43.9112,699.698 43.6712,699.936C 43.4325,700.172 43.2978,700.504 43.2978,700.841L 43.2978,701.517L 39.6832,701.517C 39.3445,701.517 39.0152,701.654 38.7765,701.892C 38.5365,702.13 38.4018,702.464 38.4018,702.8L 38.4018,721.393C 38.4018,721.93 38.7351,722.406 39.2392,722.594L 43.4751,724.158C 43.6338,724.433 43.8938,724.644 44.2125,724.741L 49.5485,726.336C 49.5965,726.41 49.6512,726.479 49.7138,726.542C 49.9512,726.781 50.2792,726.914 50.6205,726.914L 64.1245,726.914L 64.5511,726.845L 68.6712,725.388C 68.9378,725.293 69.1618,725.114 69.3178,724.877L 70.8431,722.534C 70.9965,722.596 71.1591,722.629 71.3218,722.629C 71.6511,722.629 71.9778,722.501 72.2285,722.25L 73.7778,720.702C 74.0178,720.457 74.1551,720.137 74.1551,719.794L 74.1551,716.836C 74.2071,716.842 74.2565,716.865 74.3085,716.865C 74.6378,716.865 74.9658,716.742 75.2165,716.49L 76.8885,714.814C 77.1285,714.574 77.2631,714.255 77.2631,713.91L 77.2631,710.649L 85.0951,710.649C 85.4365,710.649 85.7592,710.516 86.0018,710.274L 87.5125,708.762C 87.7525,708.522 87.8885,708.201 87.8885,707.858L 87.8885,703.696C 87.8885,703.356 87.7525,703.031 87.5125,702.792 Z "
    Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
    RenderTransformOrigin="0.5, 0.5"
    Stretch="Fill">
                                <Path.RenderTransform>
                                    <ScaleTransform ScaleX="-1" />
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                    </Button>

                    <Button
x:Name="btnNextLead"
Grid.Row="2"
Grid.Column="25"
Width="Auto"
Margin="1,0,0,0"
HorizontalAlignment="Stretch"
VerticalAlignment="Top"
Click="btnNextLead_Click"
TabIndex="0">
                        <Button.Style>
                            <Style BasedOn="{StaticResource INFlatButton}" TargetType="Button">
                                <Style.Triggers>
                                    <!--<MultiDataTrigger>
                          <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding AppData.IsLeadLoaded}"
                                         Value="False" />
                          </MultiDataTrigger.Conditions>
                          <Setter Property="IsEnabled" Value="False" />
                      </MultiDataTrigger>-->
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding AppData2.ImportIDNextLead}" Value="{x:Null}" />
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False" />
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Grid Margin="3">
                            <Path
    x:Name="PathArrowNext"
    HorizontalAlignment="Stretch"
    VerticalAlignment="Stretch"
    Data="F1 M 85.3218,707.328L 84.5658,708.088L 65.4685,708.088C 64.7618,708.088 64.1872,708.66 64.1872,709.368C 64.1872,710.077 64.7618,710.649 65.4685,710.649L 74.7031,710.649L 74.7031,713.376L 73.7778,714.238C 73.5365,713.996 73.2125,713.861 72.8725,713.861L 66.7512,713.861C 66.0445,713.861 65.4685,714.436 65.4685,715.142C 65.4685,715.85 66.0445,716.428 66.7512,716.428L 71.5898,716.428L 71.5898,719.26L 71.0311,719.82C 70.8338,719.7 70.6045,719.633 70.3645,719.633L 63.1858,719.633C 62.4778,719.633 61.9045,720.206 61.9045,720.913C 61.9045,721.622 62.4778,722.196 63.1858,722.196L 68.0045,722.196L 67.4072,723.112L 63.9031,724.356L 51.4591,724.356C 51.3245,724.24 51.1645,724.146 50.9872,724.093L 45.6485,722.496C 45.5018,722.272 45.2858,722.094 45.0232,721.998L 40.9645,720.5L 40.9645,704.08L 44.5805,704.08C 44.9205,704.08 45.2432,703.946 45.4858,703.704C 45.7272,703.464 45.8578,703.141 45.8578,702.8L 45.8578,702.121L 48.6618,702.121C 49.0032,702.121 49.3258,701.986 49.5672,701.746C 49.8098,701.505 49.9405,701.182 49.9405,700.841L 49.9405,700.002L 52.7392,700.002C 53.0805,700.002 53.4045,699.868 53.6458,699.621C 53.8872,699.381 54.0218,699.06 54.0218,698.721L 54.0218,697.877L 58.6178,697.877C 58.9578,697.877 59.2778,697.744 59.5232,697.502C 59.7645,697.26 59.8952,696.941 59.8952,696.597L 59.8952,695.758L 60.0845,695.758C 60.4258,695.758 60.7498,695.625 60.9911,695.377C 61.2325,695.135 61.3658,694.816 61.3658,694.476L 61.3658,693.472L 65.0071,693.472L 65.0071,697.601L 64.0018,697.601C 63.6605,697.601 63.3325,697.736 63.0952,697.976C 62.8538,698.214 62.7205,698.542 62.7205,698.882L 62.7205,701.025L 57.6378,701.025C 57.2965,701.025 56.9685,701.164 56.7325,701.402C 56.4898,701.644 56.3552,701.972 56.3552,702.307C 56.3552,702.652 56.4872,702.972 56.7325,703.213C 56.9711,703.456 57.2938,703.589 57.6378,703.589L 64.0018,703.589L 84.6845,703.589L 85.3218,704.225M 87.5125,702.792L 86.1231,701.402C 85.8831,701.164 85.5552,701.025 85.2178,701.025L 65.2818,701.025L 65.2818,700.161L 66.2871,700.165C 66.6272,700.165 66.9525,700.03 67.1938,699.789C 67.4338,699.544 67.5685,699.222 67.5685,698.882L 67.5685,692.189C 67.5685,691.85 67.4338,691.524 67.1938,691.285C 66.9525,691.042 66.6272,690.909 66.2871,690.909L 60.0845,690.909C 59.7458,690.909 59.4165,691.048 59.1791,691.285C 58.9378,691.521 58.8045,691.853 58.8045,692.189L 58.8045,693.19L 58.6178,693.194C 58.2778,693.194 57.9445,693.329 57.7085,693.572C 57.4711,693.809 57.3352,694.135 57.3352,694.476L 57.3352,695.314L 52.7392,695.314C 52.4045,695.314 52.0712,695.454 51.8338,695.69C 51.5965,695.928 51.4591,696.26 51.4591,696.597L 51.4591,697.438L 48.6618,697.438C 48.3218,697.438 47.9925,697.573 47.7525,697.814C 47.5152,698.053 47.3792,698.38 47.3792,698.721L 47.3792,699.56L 44.5805,699.56C 44.2392,699.56 43.9112,699.698 43.6712,699.936C 43.4325,700.172 43.2978,700.504 43.2978,700.841L 43.2978,701.517L 39.6832,701.517C 39.3445,701.517 39.0152,701.654 38.7765,701.892C 38.5365,702.13 38.4018,702.464 38.4018,702.8L 38.4018,721.393C 38.4018,721.93 38.7351,722.406 39.2392,722.594L 43.4751,724.158C 43.6338,724.433 43.8938,724.644 44.2125,724.741L 49.5485,726.336C 49.5965,726.41 49.6512,726.479 49.7138,726.542C 49.9512,726.781 50.2792,726.914 50.6205,726.914L 64.1245,726.914L 64.5511,726.845L 68.6712,725.388C 68.9378,725.293 69.1618,725.114 69.3178,724.877L 70.8431,722.534C 70.9965,722.596 71.1591,722.629 71.3218,722.629C 71.6511,722.629 71.9778,722.501 72.2285,722.25L 73.7778,720.702C 74.0178,720.457 74.1551,720.137 74.1551,719.794L 74.1551,716.836C 74.2071,716.842 74.2565,716.865 74.3085,716.865C 74.6378,716.865 74.9658,716.742 75.2165,716.49L 76.8885,714.814C 77.1285,714.574 77.2631,714.255 77.2631,713.91L 77.2631,710.649L 85.0951,710.649C 85.4365,710.649 85.7592,710.516 86.0018,710.274L 87.5125,708.762C 87.7525,708.522 87.8885,708.201 87.8885,707.858L 87.8885,703.696C 87.8885,703.356 87.7525,703.031 87.5125,702.792 Z "
    Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}"
    Stretch="Fill" />
                        </Grid>
                    </Button>
                    <Border
              x:Name="Page1"
              Grid.Row="3"
              Grid.RowSpan="12"
              Grid.Column="2"
              Grid.ColumnSpan="24"
              Background="Transparent"
              Visibility="Visible">

                        <Grid x:Name="grdPage1">
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                  x:Name="lblAgent"
                  Grid.ColumnSpan="2"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Agent" />
                            <src:EmbriantComboBox
                  x:Name="cmbAgent"
                  Grid.Row="0"
                  Grid.Column="4"
                  Grid.ColumnSpan="7"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Bottom"
                  DropDownOpened="EmbriantComboBox_DropDownOpened"
                  PreviewKeyDown="EmbriantComboBox_PreviewKeyDown"
                  SelectedValue="{Binding AppData.AgentID}"
                  SelectionChanged="cmbAgent_SelectionChanged"
                  Style="{StaticResource StyleCMBValidate}"
                  TabIndex="15100" />

                            <TextBlock
                  x:Name="lblCommenceDateUpgrade"
                  Grid.Row="0"
                  Grid.Column="13"
                  Grid.ColumnSpan="4"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Commence Date"
                  Visibility="Collapsed" />

                            <TextBlock
                  x:Name="lbllapseDate"
                  Grid.Row="0"
                  Grid.Column="13"
                  Grid.ColumnSpan="4"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Lapse Date" />
                            <igWPF:XamDateTimeEditor
                  x:Name="dteCommenceDateUpgrade"
                  Grid.Row="0"
                  Grid.Column="17"
                  Grid.ColumnSpan="7"
                  GotFocus="xamEditor_GotFocus"
                  Style="{StaticResource INXamDateTimeEditorStyle3}"
                  TabIndex="16510"
                  ToolTipService.ShowOnDisabled="True"
                  Visibility="Collapsed"
                  Value="{Binding ImportedPolicyData.CommenceDate}" />

                            <TextBlock
                  x:Name="lblExtendedSalesDate"
                  Grid.Row="1"
                  Grid.Column="13"
                  Grid.ColumnSpan="4"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Ext. Sales Date"
                  Visibility="Collapsed" />
                            <igWPF:XamDateTimeEditor
                  x:Name="dteExtendedSalesDate"
                  Grid.Row="1"
                  Grid.Column="17"
                  Grid.ColumnSpan="7"
                  GotFocus="xamEditor_GotFocus"
                  Style="{StaticResource medIN}"
                  TabIndex="16510"
                  ToolTipService.ShowOnDisabled="True"
                  Visibility="Collapsed" />
                            <Button
                                x:Name="btnSendvoucherSMS"
                                Width="161"
                                Height="Auto"
                                Background="Pink"
                                 Grid.Row="1"
                                 Grid.ColumnSpan="5"
                                 Grid.Column="16"
                                Margin="43,18,0,18"
                                HorizontalAlignment="Left"
                                Click="btnSendVoucherSMS_Click"
                                ToolTip="{Binding SMSVoucherData.SMSToolTip}"
                                ToolTipService.ShowOnDisabled="True" Grid.RowSpan="2">
                                <Button.Style>
                                    <Style BasedOn="{StaticResource INSendVoucherButton}" TargetType="{x:Type Button}">
                                        <Style.Triggers>

                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding SMSVoucherData.IsSMSSent}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="false" />
                                                <Setter Property="Background" Value="Lime" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="false" />
                                                <Setter Property="Background" Value="LightGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding SMSVoucherData.IsSMSSent}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Content" Value="SENT" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding SMSVoucherData.IsSMSSent}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="True" />
                                                <Setter Property="Content" Value="Send Voucher" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>

                            <igWPF:XamDateTimeEditor
                  x:Name="dteLapseDate"
                  Grid.Row="0"
                  Grid.Column="17"
                  Grid.ColumnSpan="7"
                  Margin="0"
                  Style="{StaticResource INXamDateTimeEditorStyle3}"
                  TabIndex="16520"
                  Value="{Binding ImportedPolicyData.LapseDate}" />

                            <TextBlock
                  x:Name="lblDateOfSale"
                  Grid.Row="1"
                  Grid.Column="0"
                  Grid.ColumnSpan="4"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Date Primed" />
                            <igWPF:XamDateTimeEditor
                  x:Name="dteDateOfSale"
                  Grid.Row="1"
                  Grid.Column="4"
                  Grid.ColumnSpan="7"
                  Margin="0"
                  GotFocus="xamEditor_GotFocus"
                  Style="{StaticResource INDTE1Validate}"
                  TabIndex="15200"
                  ValueChanged="dteDateOfSale_ValueChanged"
                  Value="{Binding AppData.DateOfSale}" />

                            <!--  as per brigette request 2015/07/03  -->
                            <TextBlock
                  x:Name="lblcnPrem"
                  Grid.Row="1"
                  Grid.Column="14"
                  Grid.ColumnSpan="4"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Contract Prem"
                  Visibility="Collapsed" />
                            <igWPF:XamMaskedEditor
                  x:Name="medCnPrem"
                  Grid.Row="1"
                  Grid.Column="17"
                  Grid.ColumnSpan="7"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  IsEnabled="False"
                  Style="{DynamicResource medINLA}"
                  TabIndex="16530"
                  Text="{Binding ImportedPolicyData.ContractPremium}"
                  Visibility="Collapsed" />


                            <Button
                                x:Name="SelectIDBtn"
                                Grid.Row="2"
                                Grid.ColumnSpan="3"
                                Style="{StaticResource INFlatButtonIDUpdate}"
                                Grid.Column="8"
                                Click="SelectIDBtn_Click"
                                Content="Choose ID #"
                                Visibility="Collapsed"
                                >

                            </Button>

                            <TextBlock
                  x:Name="lblTitle"
                  Grid.Row="3"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Title" />
                            <src:EmbriantComboBox
                  x:Name="cmbTitle"
                  Grid.Row="3"
                  Grid.Column="4"
                  Grid.ColumnSpan="3"
                  Margin="0,0,9,0"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Bottom"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.TitleID}"
                  DropDownOpened="EmbriantComboBox_DropDownOpened"
                  LostFocus="cmbTitle_LostFocus"
                  PreviewKeyDown="EmbriantComboBox_PreviewKeyDown"
                  SelectedValue="{Binding LeadData.TitleID}"
                  SelectionChanged="TitleComboBox_SelectionChanged"
                  Style="{StaticResource StyleCMBValueChanged}"
                  TabIndex="15300" />

                            <TextBlock
                  x:Name="lblInitials"
                  Grid.Row="3"
                  Grid.Column="7"
                  Grid.ColumnSpan="2"
                  Margin="15,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Initial(s)"
                  TextWrapping="NoWrap" />
                            <igWPF:XamMaskedEditor
                  x:Name="medInitials"
                  Grid.Row="3"
                  Grid.Column="8"
                  Grid.ColumnSpan="4"
                  Margin="42,2,42,0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.Initials}"
                  GotFocus="xamEditor_GotFocus"
                  Mask="{}{char:6:a-zA-Z}"
                  PromptChar=""
                  Style="{StaticResource StyleXMEValueChanged}"
                  TabIndex="15400"
                  Text="{Binding LeadData.Initials}"
                  TextChanged="medInitials_TextChanged" VerticalAlignment="Stretch" />
                            <!--  as per brigette request 2015/07/03  -->

                            <TextBlock
                  x:Name="lblName"
                  Grid.Row="4"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Name(s)" />
                            <igWPF:XamMaskedEditor
                  x:Name="medName"
                  Grid.Row="4"
                  Grid.Column="4"
                  Grid.ColumnSpan="7"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.Name}"
                  GotFocus="xamEditor_GotFocus"
                  LostFocus="xamEditor_LostFocus"
                  Mask=""
                  PromptChar=""
                  Style="{StaticResource StyleXMEValueChangedAndUpgDisabled}"
                  TabIndex="15500"
                  Text="{Binding LeadData.Name}" />

                            <TextBlock
                  x:Name="lblSurname"
                  Grid.Row="5"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Surname" />
                            <igWPF:XamMaskedEditor
                  x:Name="medSurname"
                  Grid.Row="5"
                  Grid.Column="4"
                  Grid.ColumnSpan="7"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.Surname}"
                  GotFocus="xamEditor_GotFocus"
                  LostFocus="xamEditor_LostFocus"
                  Mask=""
                  PromptChar=""
                  Style="{StaticResource StyleXMEValueChangedAndUpgDisabled}"
                  TabIndex="15600"
                  Text="{Binding LeadData.Surname}" />

                            <StackPanel
                  Grid.Row="6"
                  Grid.Column="0"
                  Grid.ColumnSpan="4"
                  Margin="0,0,0,5"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Bottom"
                  Orientation="Horizontal">
                                <TextBlock
                    x:Name="lblID"
                    VerticalAlignment="Bottom"
                    MouseLeftButtonDown="lblID_MouseLeftButtonDown"
                    Style="{StaticResource INLabelSelect}"
                    Text="ID"
                    TextDecorations="Underline" />
                                <TextBlock
                    x:Name="lblSeperator"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource INLabelText2}"
                    Text=" / " />
                                <TextBlock
                    x:Name="lblPassport"
                    VerticalAlignment="Bottom"
                    MouseLeftButtonDown="lblPassport_MouseLeftButtonDown"
                    Style="{StaticResource INLabelSelect}"
                    Text="Passport"
                    />
                                <TextBlock
                    x:Name="lblNumber"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource INLabelText2}"
                    Text=" No." />
                            </StackPanel>
                            <Grid
                  x:Name="IDNumberGrid"
                  Grid.Row="6"
                  Grid.Column="4"
                  Grid.ColumnSpan="6"
                  Margin="0"
                  VerticalAlignment="Bottom">

                                <igWPF:XamMaskedEditor
                    x:Name="medIDNumber"
                    Margin="1,0,1,0"
                    Panel.ZIndex="0"
                    data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.IDNumber}"
                    Style="{StaticResource StyleXMEIDNumberValueChanged}"
                    TabIndex="15700"
                    Text="{Binding LeadData.IDNumber}"
                    Visibility="Visible" VerticalAlignment="Center" HorizontalAlignment="Stretch" />
                                <igWPF:XamMaskedEditor
                    x:Name="medPassportNumber"
                    Margin="1,0"
                    HorizontalAlignment="Stretch"
                    Panel.ZIndex="0"
                    data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.PassportNumber}"
                    Style="{StaticResource StyleXMEPassportNumberValueChanged}"
                    TabIndex="15800"
                    Text="{Binding LeadData.PassportNumber}"
                    Visibility="Hidden" />
                            </Grid>
                            <TextBlock
                                x:Name="lblIDConfirmed"
                                Grid.Row="6"
                                Grid.Column="10"
                                FontSize="10"
                                Grid.ColumnSpan="2"
                                Margin="17,0,0,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"
                                Style="{StaticResource INLabelText2}"
                                Text="Confirmed?" />

                            <CheckBox x:Name="IDConfirmedCB"
                                      Grid.Row="6"
                                      Grid.Column="10"
                                      Margin="0,0,42,0"
                                      Grid.ColumnSpan="2"
                                      VerticalAlignment="Center"
                                      HorizontalAlignment="Right"
                                      Checked="IDConfirmedCB_Checked"
                                      Unchecked="IDConfirmedCB_Unchecked"
                                      Content="Confirmed?">

                            </CheckBox>

                            <TextBlock
                  x:Name="lblDateOfBirth"
                  Grid.Row="7"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Date of Birth" />
                            <igWPF:XamDateTimeEditor
                  x:Name="dteDateOfBirth"
                  Grid.Row="7"
                  Grid.Column="4"
                  Grid.ColumnSpan="4"
                  Margin="0"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.DateOfBirth}"
                  GotFocus="xamEditor_GotFocus"
                  Loaded="dteDateOfBirth_Loaded"
                  PreviewGotKeyboardFocus="dteDateOfBirth_PreviewGotKeyboardFocus"
                  Style="{StaticResource StyleINXamDateTimeEditorValueChanged1}"
                  TabIndex="15900"
                  Value="{Binding LeadData.DateOfBirth}" />

                            <TextBlock
                  x:Name="lblAge"
                  Grid.Row="7"
                  Grid.Column="9"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Age"
                  TextWrapping="NoWrap" />
                            <igWPF:XamMaskedEditor
                  x:Name="medAge"
                  Grid.Row="7"
                  Grid.Column="10"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  HorizontalContentAlignment="Center"
                  IsEnabled="False"
                  Mask=""
                  PromptChar=""
                  Style="{StaticResource medINLA}"
                  TabIndex="16000"
                  Text="{Binding LeadData.Age, TargetNullValue=''}" />

                            <TextBlock
                  x:Name="lblGender"
                  Grid.Row="8"
                  Grid.Column="0"
                  Grid.ColumnSpan="2"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Gender" />
                            <src:EmbriantComboBox
                  x:Name="cmbGender"
                  Grid.Row="8"
                  Grid.Column="4"
                  Grid.ColumnSpan="7"
                  VerticalAlignment="Bottom"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.GenderID}"
                  DropDownOpened="EmbriantComboBox_DropDownOpened"
                  PreviewKeyDown="EmbriantComboBox_PreviewKeyDown"
                  SelectedValue="{Binding LeadData.GenderID}"
                  Style="{StaticResource StyleCMBValidateValueChanged}"
                  TabIndex="16100" />

                            <TextBlock
                                x:Name="lblHardBound"
                                Grid.Row="9"
                                Grid.Column="10"
                                Visibility="Collapsed"
                                Foreground="LightGreen"
                                FontSize="10"
                                Grid.ColumnSpan="2"
                                Margin="10,13,0,0"
                                VerticalAlignment="Top"
                                Style="{StaticResource INLabelText2}"
                                Text="Hard Bounce" />

                            <TextBlock
                  x:Name="lblEMail"
                  Grid.Row="9"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="E Mail Address" />
                            <igWPF:XamMaskedEditor
                  x:Name="medEMail"
                  Grid.Row="9"
                  Grid.Column="4"
                  Grid.ColumnSpan="6"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.Email}"
                  EditModeValidationError="xamEditor_EditModeValidationError"
                  GotFocus="xamEditor_GotFocus"
                  LostFocus="xamEditor_LostFocus"
                  Mask=""
                  PromptChar=""
                  Style="{StaticResource StyleXMEEmailAddressValueChanged}"
                  TabIndex="16150"
                  Text="{Binding LeadData.Email}">




                                <!--
                                    <igWPF:XamMaskedEditor.Style>
                                    <Style BasedOn="{StaticResource medINLA}"
                                    TargetType="{x:Type igWPF:XamMaskedEditor}">
                                    <Style.Triggers>
                                    <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsLeadLoaded}"
                                    Value="True" />
                                    <Condition Binding="{Binding (igWPF:ValueEditor.IsValueValid), RelativeSource={RelativeSource Self}}"
                                    Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="BorderBrush" Value="Red" />
                                    </MultiDataTrigger>
                                    </Style.Triggers>
                                    </Style>
                                    </igWPF:XamMaskedEditor.Style>
                                -->
                                <igWPF:XamMaskedEditor.ValueConstraint>
                                    <igWPF:ValueConstraint
                      MaxLength="50"
                      Nullable="True"
                      RegexPattern="^(?(&quot;&quot;)(&quot;&quot;[^&quot;&quot;]+?&quot;&quot;@)|(([0-9a-zA-Z]((\.(?!\.))|[-!#\$%&amp;'\*\+/=\?\^'\{\}\|~\w])*)(?&lt;=[0-9a-zA-Z])@))(?(\[)(\[(\d{1,3}\.){3}\d{1,3}\])|(([0-9a-zA-Z][-\w]*[0-9a-zA-Z]\.)+[a-zA-Z]{2,6}))$" />
                                </igWPF:XamMaskedEditor.ValueConstraint>
                            </igWPF:XamMaskedEditor>

                            <TextBlock
                  x:Name="lblWorkPhone"
                  Grid.Row="10"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Work Phone" />
                            <igWPF:XamMaskedEditor
                  x:Name="medWorkPhone"
                  Grid.Row="10"
                  Grid.Column="4"
                  Grid.ColumnSpan="3"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.TelWork}"
                  Style="{StaticResource StyleXMETelNumberValueChanged}"
                  TabIndex="16200"
                  Text="{Binding LeadData.TelWork}" />
                            <Grid
                  Grid.Row="10"
                  Grid.Column="7"
                  Grid.ColumnSpan="4"
                  Visibility="Collapsed"
                  Height="30"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Bottom">
                                <Viewbox>
                                    <StackPanel
                      x:Name="stpWorkPhone"
                      Height="30"
                      Orientation="Horizontal">
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="07" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="08" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="09" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="10" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="11" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="12" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="13" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="14" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="15" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="16" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="17" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="18" />
                                    </StackPanel>
                                </Viewbox>
                            </Grid>
                            <content:btnPhone
                  x:Name="btnWorkPhone"
                  Grid.Row="10"
                  Grid.Column="10"
                  Width="32"
                  Height="32"
                  Margin="0,0,0,1"
                  VerticalAlignment="Bottom"
                  
                  IsPhoneActive="{Binding CTPhoneData.IsWorkPhoneActive}"
                  TabIndex="16201"
                  Visibility="Collapsed">
                                <UserControl.Resources>
                                    <Style TargetType="{x:Type content:btnPhone}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=medWorkPhone, Path=Text}" Value="" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=medWorkPhone, Path=Text}" Value="{x:Null}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=medWorkPhone, Path=IsValueValid}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.IsAgentLoggedIn}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding CTPhoneData.IsWorkPhoneActive}" Value="False" />
                                                    <Condition Binding="{Binding CTPhoneData.IsAnyPhoneActive}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnWorkPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Answered}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="DarkGreen" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnWorkPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Disconnected}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Black" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnWorkPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Ringing}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Blue" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnWorkPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Busy}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="DarkOrange" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnWorkPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Invalid}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Red" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </UserControl.Resources>
                            </content:btnPhone>

                            <TextBlock
                  x:Name="lblHomePhone"
                  Grid.Row="11"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Home Phone" />
                            <igWPF:XamMaskedEditor
                  x:Name="medHomePhone"
                  Grid.Row="11"
                  Grid.Column="4"
                  Grid.ColumnSpan="3"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.TelHome}"
                  Style="{StaticResource StyleXMETelNumberValueChanged}"
                  TabIndex="16300"
                  Text="{Binding LeadData.TelHome}" />
                            <Grid
                  Grid.Row="11"
                  Grid.Column="7"
                  Grid.ColumnSpan="4"
                  Visibility="Collapsed"
                  Height="30"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Bottom">
                                <Viewbox>
                                    <StackPanel
                      x:Name="stpHomePhone"
                      Height="30"
                      Orientation="Horizontal">
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="07" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="08" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="09" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="10" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="11" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="12" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="13" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="14" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="15" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="16" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="17" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="18" />
                                    </StackPanel>
                                </Viewbox>
                            </Grid>
                            <content:btnPhone
                  x:Name="btnHomePhone"
                  Grid.Row="11"
                  Grid.Column="10"
                  Width="32"
                  Height="32"
                  Margin="0,0,0,1"
                  VerticalAlignment="Bottom"
                
                  IsPhoneActive="{Binding CTPhoneData.IsHomePhoneActive}"
                  TabIndex="16301"
                  Visibility="Collapsed">
                                <UserControl.Resources>
                                    <Style TargetType="{x:Type content:btnPhone}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=medHomePhone, Path=Text}" Value="" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=medHomePhone, Path=Text}" Value="{x:Null}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=medHomePhone, Path=IsValueValid}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.IsAgentLoggedIn}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding CTPhoneData.IsHomePhoneActive}" Value="False" />
                                                    <Condition Binding="{Binding CTPhoneData.IsAnyPhoneActive}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnHomePhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Answered}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="DarkGreen" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnHomePhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Disconnected}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Black" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnHomePhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Ringing}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Blue" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnHomePhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Busy}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="DarkOrange" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnHomePhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Invalid}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Red" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </UserControl.Resources>
                            </content:btnPhone>

                            <TextBlock
                  x:Name="lblCellPhone"
                  Grid.Row="12"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Cell Phone" />
                            <igWPF:XamMaskedEditor
                  x:Name="medCellPhone"
                  Grid.Row="12"
                  Grid.Column="4"
                  Grid.ColumnSpan="3"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.TelCell}"
                  Style="{StaticResource StyleXMETelNumberValueChanged}"
                  TabIndex="16400"
                  Text="{Binding LeadData.TelCell}" />
                            <Grid
                  Grid.Row="12"
                  Grid.Column="7"
                  Grid.ColumnSpan="4"
                  Height="30"
                  Visibility="Collapsed"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Bottom">
                                <Viewbox>
                                    <StackPanel
                      x:Name="stpCellPhone"
                      Height="30"
                      Orientation="Horizontal">
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="07" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="08" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="09" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="10" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="11" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="12" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="13" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="14" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="15" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="16" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="17" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="18" />
                                    </StackPanel>
                                </Viewbox>
                            </Grid>
                            <content:btnPhone
                  x:Name="btnCellPhone"
                  Grid.Row="12"
                  Grid.Column="10"
                  Width="32"
                  Height="32"
                  Margin="0,0,0,1"
                  VerticalAlignment="Bottom"
                  
                  IsPhoneActive="{Binding CTPhoneData.IsCellPhoneActive}"
                  TabIndex="16401"
                  Visibility="Collapsed">
                                <UserControl.Resources>
                                    <Style TargetType="{x:Type content:btnPhone}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=medCellPhone, Path=Text}" Value="" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=medCellPhone, Path=Text}" Value="{x:Null}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=medCellPhone, Path=IsValueValid}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.IsAgentLoggedIn}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding CTPhoneData.IsCellPhoneActive}" Value="False" />
                                                    <Condition Binding="{Binding CTPhoneData.IsAnyPhoneActive}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnCellPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Answered}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="DarkGreen" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnCellPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Disconnected}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Black" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnCellPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Ringing}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Blue" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnCellPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Busy}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="DarkOrange" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnCellPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Invalid}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Red" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </UserControl.Resources>
                            </content:btnPhone>

                            <TextBlock
                  x:Name="lblOtherPhone"
                  Grid.Row="13"
                  Grid.Column="0"
                  Grid.ColumnSpan="3"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Other Phone" />
                            <igWPF:XamMaskedEditor
                  x:Name="medOtherPhone"
                  Grid.Row="13"
                  Grid.Column="4"
                  Grid.ColumnSpan="3"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.TelOther}"
                  Style="{StaticResource StyleXMETelNumberValueChanged}"
                  TabIndex="16500"
                  Text="{Binding LeadData.TelOther}" />
                            <Grid
                  Grid.Row="13"
                  Grid.Column="7"
                  Grid.ColumnSpan="4"
                  Height="30"
                  Visibility="Collapsed"
                  HorizontalAlignment="Left"
                  VerticalAlignment="Bottom">
                                <Viewbox>
                                    <StackPanel
                      x:Name="stpOtherPhone"
                      Height="30"
                      Orientation="Horizontal">
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="07" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="08" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="09" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="10" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="11" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="12" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="13" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="14" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="15" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="16" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="17" />
                                        <Border
                        Width="12"
                        Margin="2,0,0,3"
                        Background="White"
                        CornerRadius="2"
                        ToolTip="18" />
                                    </StackPanel>
                                </Viewbox>
                            </Grid>

                            <Button
                  x:Name="btnAddContacts"
                  Grid.Row="11"
                  Grid.RowSpan="2"
                  Grid.Column="11"
                  Width="50"
                  Height="50"
                  Grid.ColumnSpan="2"
                  Margin="0"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Click="btnAddContacts_Click"
                  Style="{DynamicResource INAddContactsButton}"
                  TabIndex="0">

                                <Image
                    x:Name="imageAddContacts"
                    Height="45"
                    Width="45"
                    VerticalAlignment="Top"
                    HorizontalAlignment="Left"
                    Source="pack://application:,,,/Resources/plus.png" />
                            </Button>
                            <content:btnPhone
                  x:Name="btnOtherPhone"
                  Grid.Row="13"
                  Grid.Column="10"
                  Width="32"
                  Height="32"
                  Margin="0,0,0,1"
                  VerticalAlignment="Bottom"
                  
                  IsPhoneActive="{Binding CTPhoneData.IsOtherPhoneActive}"
                  TabIndex="16501"
                  Visibility="Collapsed">
                                <UserControl.Resources>
                                    <Style TargetType="{x:Type content:btnPhone}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=medOtherPhone, Path=Text}" Value="" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=medOtherPhone, Path=Text}" Value="{x:Null}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=medOtherPhone, Path=IsValueValid}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.IsAgentLoggedIn}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding CTPhoneData.IsOtherPhoneActive}" Value="False" />
                                                    <Condition Binding="{Binding CTPhoneData.IsAnyPhoneActive}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="IsEnabled" Value="False" />
                                                <Setter Property="Foreground" Value="DarkGray" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnOtherPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Answered}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="DarkGreen" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnOtherPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Disconnected}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Black" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnOtherPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Ringing}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Blue" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnOtherPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Busy}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="DarkOrange" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="True" />
                                                    <Condition Binding="{Binding ElementName=btnOtherPhone, Path=IsEnabled}" Value="True" />
                                                    <Condition Binding="{Binding CTPhoneData.CTPhoneCallStatus}" Value="{x:Static business:CTPhoneCallStatus.Invalid}" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Foreground" Value="Red" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </UserControl.Resources>
                            </content:btnPhone>

                            <TextBlock
                  x:Name="lblAddress"
                  Grid.Row="3"
                  Grid.Column="13"
                  Grid.ColumnSpan="2"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Address" />
                            <igWPF:XamMaskedEditor
                  x:Name="medAddress1"
                  Grid.Row="3"
                  Grid.Column="17"
                  Grid.ColumnSpan="7"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.Address1}"
                  GotFocus="xamEditor_GotFocus"
                  LostFocus="xamEditor_LostFocus"
                  Mask=""
                  PromptChar=""
                  Style="{StaticResource StyleXMEAddressValueChanged}"
                  TabIndex="16600"
                  Text="{Binding LeadData.Address1}"
                  TextChanged="medAddressFields_TextChanged" />

                            <igWPF:XamMaskedEditor
                  x:Name="medAddress2"
                  Grid.Row="4"
                  Grid.Column="17"
                  Grid.ColumnSpan="7"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.Address2}"
                  GotFocus="xamEditor_GotFocus"
                  LostFocus="xamEditor_LostFocus"
                  Mask=""
                  PromptChar=""
                  Style="{StaticResource StyleXMEAddressValueChanged}"
                  TabIndex="16700"
                  Text="{Binding LeadData.Address2}"
                  TextChanged="medAddressFields_TextChanged" />

                            <igWPF:XamMaskedEditor
                  x:Name="medAddress3"
                  Grid.Row="5"
                  Grid.Column="17"
                  Grid.ColumnSpan="7"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.Address3}"
                  GotFocus="xamEditor_GotFocus"
                  LostFocus="xamEditor_LostFocus"
                  Mask=""
                  PromptChar=""
                  Style="{StaticResource StyleXMEAddressValueChanged}"
                  TabIndex="16800"
                  Text="{Binding LeadData.Address3}"
                  TextChanged="medAddressFields_TextChanged"
                  Visibility="Visible" />

                            <TextBlock
                  x:Name="lblSuburb"
                  Grid.Row="6"
                  Grid.Column="13"
                  Grid.ColumnSpan="2"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Suburb"
                  Visibility="Hidden" />
                            <igWPF:XamMaskedEditor
                  x:Name="medSuburb"
                  Grid.Row="6"
                  Grid.Column="17"
                  Grid.ColumnSpan="7"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.Address4}"
                  GotFocus="xamEditor_GotFocus"
                  LostFocus="xamEditor_LostFocus"
                  Mask=""
                  PromptChar=""
                  Style="{StaticResource StyleXMEAddressValueChanged}"
                  TabIndex="16900"
                  Text="{Binding LeadData.Address4}"
                  TextChanged="medAddressFields_TextChanged"
                  Visibility="Visible" />
                            <!--
                                <src:EmbriantComboBox
                                x:Name="ecbSuburb"
                                Grid.Row="6"
                                Grid.Column="17"
                                Grid.ColumnSpan="7"
                                Margin="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Bottom"
                                GotFocus="xamEditor_GotFocus"
                                Loaded="ecb_Loaded"
                                PreviewKeyDown="ecb_PreviewKeyDown"
                                PreviewTextInput="ecb_PreviewTextInput"
                                SelectionChanged="ecb_SelectionChanged"
                                Style="{StaticResource cmbINLA}"
                                TabIndex="0" />
                            -->

                            <TextBlock
                  x:Name="lblTown"
                  Grid.Row="7"
                  Grid.Column="13"
                  Grid.ColumnSpan="3"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Town / City"
                  Visibility="Hidden" />
                            <igWPF:XamMaskedEditor
                  x:Name="medTown"
                  Grid.Row="7"
                  Grid.Column="17"
                  Grid.ColumnSpan="7"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.Address5}"
                  GotFocus="xamEditor_GotFocus"
                  LostFocus="xamEditor_LostFocus"
                  Mask=""
                  PromptChar=""
                  Style="{StaticResource StyleXMEAddressValueChanged}"
                  TabIndex="17000"
                  Text="{Binding LeadData.Address5}"
                  TextChanged="medAddressFields_TextChanged"
                  Visibility="Visible" />
                            <!--
                                <src:EmbriantComboBox
                                x:Name="ecbTown"
                                Grid.Row="7"
                                Grid.Column="17"
                                Grid.ColumnSpan="7"
                                Margin="0"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Bottom"
                                GotFocus="xamEditor_GotFocus"
                                PreviewKeyDown="ecb_PreviewKeyDown"
                                SelectionChanged="ecb_SelectionChanged"
                                Style="{StaticResource cmbINLA}"
                                TabIndex="0"
                                Visibility="Visible"/>
                            -->

                            <TextBlock
                  x:Name="lblPostalCode"
                  Grid.Row="8"
                  Grid.Column="13"
                  Grid.ColumnSpan="3"
                  Margin="0,0,0,5"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Postal Code" />
                            <igWPF:XamMaskedEditor
                  x:Name="medPostalCode"
                  Grid.Row="8"
                  Grid.Column="17"
                  Grid.ColumnSpan="3"
                  Margin="0"
                  HorizontalAlignment="Stretch"
                  data:AttachedProperties.HistoryValue="{Binding LeadHistoryData.PostalCode}"
                  GotFocus="xamEditor_GotFocus"
                  Mask="{}{char:4:0-9}"
                  PromptChar=""
                  Style="{StaticResource StyleXMEAddressValueChanged}"
                  TabIndex="17100"
                  Text="{Binding LeadData.PostalCode}"
                  TextChanged="medAddressFields_TextChanged" />

                            <!--
                                <Button x:Name="btnChangeAddress"
                                Grid.Row="8"
                                Grid.Column="22"
                                Grid.ColumnSpan="2"
                                Height="33"
                                HorizontalAlignment="Stretch"
                                VerticalAlignment="Bottom"
                                Click="btnChangeAddress_Click"
                                Content="Edit..."
                                Style="{StaticResource INFlatButton2}"
                                Visibility="Collapsed"
                                TabIndex="0" />
                            -->

                            <!--<Button
                                x:Name="btnReferrorNOK"
                                Grid.Row="9"
                                Grid.Column="17"
                                Grid.ColumnSpan="5"
                                Width="170"
                                Height="25"
                                Margin="0,0,0,0"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Bottom"
                                Command="{Binding ReferrorNOKCommand}"
                                Content="Referror / Next of Kin"
                                Style="{StaticResource INFlatButton}"
                                TabIndex="17010" />-->

                            <Grid
                  x:Name="grdNOKUpgrade"
                  Grid.Row="10"
                  Grid.RowSpan="4"
                  Grid.Column="13"
                  Grid.ColumnSpan="11"
                  Background="Transparent">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type Grid}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Resources>
                                <TextBlock
                    x:Name="lblNOKNameUpgrade"
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Margin="0,0,0,5"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource INLabelText2}"
                    Text="NOK Name" />
                                <igWPF:XamMaskedEditor
                    x:Name="medNOKNameUpgrade"
                    Grid.Row="0"
                    Grid.Column="4"
                    Grid.ColumnSpan="7"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    data:AttachedProperties.HistoryValue="{Binding NextOfKinHistoryData[0].Name}"
                    GotFocus="xamEditor_GotFocus"
                    LostFocus="xamEditor_LostFocus"
                    Mask=""
                    PromptChar=""
                    Style="{StaticResource medINLA}"
                    TabIndex="17100"
                    Text="{Binding NextOfKinData[0].Name}" />
                                <TextBlock
                    x:Name="lblNOKSurnameUpgrade"
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Margin="0,0,0,5"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource INLabelText2}"
                    Text="NOK Surname" />
                                <igWPF:XamMaskedEditor
                    x:Name="medNOKSurnameUpgrade"
                    Grid.Row="1"
                    Grid.Column="4"
                    Grid.ColumnSpan="7"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    data:AttachedProperties.HistoryValue="{Binding NextOfKinHistoryData[0].Surname}"
                    GotFocus="xamEditor_GotFocus"
                    LostFocus="xamEditor_LostFocus"
                    Mask=""
                    PromptChar=""
                    Style="{StaticResource medINLA}"
                    TabIndex="17100"
                    Text="{Binding NextOfKinData[0].Surname}" />
                                <TextBlock
                    x:Name="lblNOKRelationshipUpgrade"
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Margin="0,0,0,5"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource INLabelText2}"
                    Text="NOK Relationship" />
                                <src:EmbriantComboBox
                    x:Name="cmbNOKRelationshipUpgrade"
                    Grid.Row="2"
                    Grid.Column="4"
                    Grid.ColumnSpan="7"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    data:AttachedProperties.HistoryValue="{Binding NextOfKinHistoryData[0].RelationshipID}"
                    DropDownOpened="EmbriantComboBox_DropDownOpened"
                    PreviewKeyDown="EmbriantComboBox_PreviewKeyDown"
                    SelectedValue="{Binding NextOfKinData[0].RelationshipID}"
                    Style="{StaticResource cmbINLA}"
                    TabIndex="17100" />
                                <TextBlock
                    x:Name="lblNOKContactTelUpgrade"
                    Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Margin="0,0,0,5"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource INLabelText2}"
                    Text="NOK Contact Nr" />
                                <igWPF:XamMaskedEditor
                    x:Name="medNOKContactPhoneUpgrade"
                    Grid.Row="3"
                    Grid.Column="4"
                    Grid.ColumnSpan="7"
                    Margin="0,0,0,0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Bottom"
                    data:AttachedProperties.HistoryValue="{Binding NextOfKinHistoryData[0].TelContact}"
                    Style="{StaticResource StyleXMETelNumber}"
                    TabIndex="17100"
                    Text="{Binding NextOfKinData[0].TelContact}" />
                            </Grid>

                            <Grid
                  x:Name="grdReferror"
                  Grid.Row="10"
                  Grid.RowSpan="4"
                  Grid.Column="13"
                  Grid.ColumnSpan="11"
                  Background="Transparent">
                                <Grid.RowDefinitions>
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                    <RowDefinition />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Grid.Resources>
                                    <Style TargetType="{x:Type Grid}">
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="False" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Visible" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding AppData.IsLeadUpgrade}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Resources>

                                <TextBlock
                    x:Name="lblReferrorTitle"
                    Grid.Row="0"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="0,0,0,5"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource INLabelText2}"
                    Text="Referror Title" />
                                <src:EmbriantComboBox
                    x:Name="cmbReferrorTitle"
                    Grid.Row="0"
                    Grid.Column="4"
                    Grid.ColumnSpan="7"
                    VerticalAlignment="Bottom"
                    IsEnabled="False"
                    SelectedValue="{Binding LeadData.ReferrorTitleID}"
                    Style="{StaticResource cmbINLA}" />

                                <TextBlock
                    x:Name="lblReferrorName"
                    Grid.Row="1"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="0,0,0,5"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource INLabelText2}"
                    Text="Referror Name" />
                                <igWPF:XamMaskedEditor
                    x:Name="medReferrorName"
                    Grid.Row="1"
                    Grid.Column="4"
                    Grid.ColumnSpan="7"
                    Mask=""
                    PromptChar=""
                    Style="{StaticResource medINDisabled}"
                    Text="{Binding LeadData.ReferrorName}" />

                                <TextBlock
                    x:Name="lblReferrorRelationship"
                    Grid.Row="2"
                    Grid.Column="0"
                    Grid.ColumnSpan="4"
                    Margin="0,0,0,5"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource INLabelText2}"
                    Text="Referror Relationship" />
                                <src:EmbriantComboBox
                    x:Name="cmbReferrorRelationship"
                    Grid.Row="2"
                    Grid.Column="4"
                    Grid.ColumnSpan="7"
                    VerticalAlignment="Bottom"
                    IsEnabled="False"
                    SelectedValue="{Binding LeadData.ReferrorRelationshipID}"
                    Style="{StaticResource cmbINLA}" />

                                <TextBlock
                    x:Name="lblReferrorContactNumber"
                    Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="3"
                    Margin="0,0,0,5"
                    VerticalAlignment="Bottom"
                    Style="{StaticResource INLabelText2}"
                    Text="Referror Contact"
                    Visibility="Visible" />

                                <igWPF:XamMaskedEditor
                    x:Name="medReferrorContact"
                    Grid.Row="3"
                    Grid.Column="4"
                    Grid.ColumnSpan="7"
                    Mask=""
                    PromptChar=""
                    Style="{StaticResource medINDisabled}"
                    Text="{Binding LeadData.ReferrorContact}" />

                            </Grid>
                            <TextBlock
                  x:Name="lblCancerQuestionOne"
                  Grid.Row="2"
                  Grid.Column="0"
                  Grid.ColumnSpan="9"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Have you ever been diagnosed with cancer?" Margin="0,0,0,19" Width="353"  FontSize="15"
                  Visibility="Collapsed" />
                            <CheckBox
                      x:Name="chkQuestionOne"
                      Grid.Row="2"
                      Grid.Column="11"
                      Width="16"
                      Height="16"
                      Margin="10,0,17,21"
                      VerticalAlignment="Bottom"
                      Checked="chkQuestionOne_Checked"
                      IsChecked="false"
                      Style="{StaticResource StyleCHKLA2}"
                      TabIndex="23200"
                      Unchecked="chkQuestionOne_Unchecked"
                      Visibility="Collapsed" />
                            <TextBlock
                  x:Name="lblCancerQuestionTwo"
                  Grid.Row="2"
                  Grid.Column="0"
                  Grid.ColumnSpan="14"
                  VerticalAlignment="Bottom"
                  Style="{StaticResource INLabelText2}"
                  Text="Have you ever been to a doctor who told you, you may have cancer?" Width="563" Margin="0,0,0,35" Grid.RowSpan="2" FontSize="15"
                  Visibility="Collapsed"/>

                            <CheckBox
                      x:Name="chkQuestionTwo"
                      Grid.Row="2"
                      Grid.Column="11"
                      Width="16"
                      Height="16"
                      Margin="10,0,17,35"
                      VerticalAlignment="Bottom"
                      Checked="chkQuestionTwo_Checked"
                      IsChecked="false"
                      Style="{StaticResource StyleCHKLA2}"
                      TabIndex="23200"
                      Unchecked="chkQuestionTwo_Unchecked"
                      Visibility="Collapsed"
                      Grid.RowSpan="2" />



                        </Grid>

                    </Border>

                    <StackPanel
              Grid.Row="16"
              Grid.Column="3"
              Grid.ColumnSpan="21"
              Margin="15,0,0,0"
              Orientation="Horizontal">
                        <Button
                x:Name="btnPermissionLead"
                Width="100"
                Height="Auto"
                Margin="0,11,0,0"
                HorizontalAlignment="Left"
                Background="Plum"
                Click="btnPermissionLead_Click"
                Content="Lead Permission"
                FontSize="13"
                Visibility="Collapsed">
                            <Button.Resources>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="CornerRadius" Value="5" />
                                </Style>
                            </Button.Resources>
                        </Button>
                        <Grid Width="30" />
                        <Button
                x:Name="btnSendSMS"
                Width="85"
                Height="Auto"
                Margin="0,11,0,0"
                HorizontalAlignment="Left"
                Click="btnSendSMS_Click"
                ToolTip="{Binding SMSData.SMSToolTip}"
                ToolTipService.ShowOnDisabled="True">
                            <Button.Style>

                                <Style BasedOn="{StaticResource INSendSMSButton}" TargetType="{x:Type Button}">


                                    <Style.Triggers>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding UserData.StaffType, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpStaffType.Temporary}}" Value="True" />
                                                <Condition Value="True">
                                                    <Condition.Binding>
                                                        <MultiBinding Converter="{StaticResource DateCompareConverter}" ConverterParameter="&lt;=">
                                                            <MultiBinding.Bindings>
                                                                <Binding Source="{x:Static sys:DateTime.Now}" />
                                                                <Binding Path="UserData.TempSMSAllowDate" />
                                                            </MultiBinding.Bindings>
                                                        </MultiBinding>
                                                    </Condition.Binding>
                                                </Condition>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding IsChecked, ElementName=IsUpgradeCampaign}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Visibility" Value="Visible" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SMSData.IsSMSSent}" Value="True" />

                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="false" />
                                            <Setter Property="Background" Value="Lime" />
                                        </MultiDataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SMSData.SMSCount, Converter={StaticResource IntCompareConverter}, ConverterParameter='&lt;,2'}" Value="True" />
                                                <Condition Value="True">
                                                    <Condition.Binding>
                                                        <MultiBinding Converter="{StaticResource DateCompareConverter}" ConverterParameter="&gt;=">
                                                            <MultiBinding.Bindings>
                                                                <Binding Source="{x:Static sys:DateTime.Now}" />
                                                                <Binding Path="AppData.SMSAvailableDate" />
                                                            </MultiBinding.Bindings>
                                                        </MultiBinding>
                                                    </Condition.Binding>
                                                </Condition>
                                                <Condition Binding="{Binding UserData.StaffType, Converter={StaticResource EnumCompareConverter}, ConverterParameter={x:Static business:lkpStaffType.Permanent}}" Value="True" />

                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                        </MultiDataTrigger>



                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding AppData.IsLeadLoaded}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="false" />
                                            <Setter Property="Background" Value="LightGray" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SMSData.IsSMSSent}" Value="True" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="Content" Value="SENT" />
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SMSData.IsSMSSent}" Value="False" />
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="true" />
                                            <Setter Property="Content" Value="Send SMS" />
                                        </MultiDataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Grid Width="30" />
                        <Button
x:Name="btnNotes"
Width="85"
HorizontalAlignment="Left"
VerticalAlignment="Bottom"
Click="btnNotes_Click"
IsEnabled="{Binding AppData.IsLeadLoaded}"
Style="{StaticResource INFlatButton}"
TabIndex="98200"
Visibility="{Binding AppData.NotesFeatureVisibility}">
                            <AccessText
  x:Name="acNotes"
  Margin="0"
  HorizontalAlignment="Center"
  VerticalAlignment="Center"
  Text="N_otes"
  Visibility="Visible" />
                        </Button>
                        <Grid Width="30" />
                    </StackPanel>

                    <Grid
              x:Name="grdSave"
              Grid.Row="16"
              Grid.Column="22"
              Grid.ColumnSpan="4"
              Margin="0,0,-12,-12"
              Background="Black" />
                    <Button
x:Name="btnSave12"
Grid.Row="17"
Grid.Column="22"
Grid.ColumnSpan="4"
Height="Auto"
Margin="0,8,0,0"
Content="Save"
                        IsEnabled="True"
HorizontalAlignment="Right"
Click="btnSave_Click"
                        
 Style="{StaticResource SaveButton}"
TabIndex="98600" />
                </Grid>
            </Border>
        </Border>
    </Viewbox>
</src:BaseControl>
