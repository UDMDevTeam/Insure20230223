<src:BaseControl
    x:Class="UDM.Insurance.Interface.Screens.ReportDiaryToFinalScreen"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="clr-namespace:UDM.WPF.Converters;assembly=UDM.WPF"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:igWPF="http://schemas.infragistics.com/xaml/wpf"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:src="clr-namespace:Embriant.WPF.Controls;assembly=Embriant.WPF"
    mc:Ignorable="d">
    <UserControl.Background>
        <!--<ImageBrush ImageSource="../Images/Christmas-Background-Wallpaper-14.jpg"/>-->
        <ImageBrush ImageSource="../Resources/ReportBackground.jpg" />
        <!--<ImageBrush ImageSource="{Binding Converter={StaticResource GetImageConverter}, Source=Football/Soccer.png}"/>-->
    </UserControl.Background>

    <src:BaseControl.Resources>
        <converters:DateCompareConverter
            x:Key="DateCompareConverter" />
        <converters:InverseBooleanConverter
            x:Key="InverseBooleanConverter" />
        <Style
            x:Key="ReportButton"
            BasedOn="{StaticResource INFlatButton}"
            TargetType="{x:Type Button}">
            <Style.Triggers>
                <DataTrigger
                    Binding="{Binding SelectedValue, ElementName=cmbCampaign}"
                    Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <!--<DataTrigger
                    Binding="{Binding SelectedDate, ElementName=Cal1}"
                    Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>-->
                <DataTrigger
                    Binding="{Binding SelectedDate, ElementName=Cal2}"
                    Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <DataTrigger
                    Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type src:BaseControl}}, Path=IsReportRunning}"
                    Value="True">
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>
                <!--<DataTrigger
                    Value="False">
                    <DataTrigger.Binding>
                        <MultiBinding
                            Converter="{StaticResource DateCompareConverter}"
                            ConverterParameter="&lt;=">
                            <MultiBinding.Bindings>
                                <Binding
                                    ElementName="Cal1"
                                    Path="SelectedDate" />
                                <Binding
                                    ElementName="Cal2"
                                    Path="SelectedDate" />
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </DataTrigger.Binding>
                    <Setter Property="IsEnabled" Value="False" />
                </DataTrigger>-->
                <!--
                    <DataTrigger
                    Binding="{Binding Tag,
                    ElementName=MainBorder}"
                    Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                    <DataTrigger
                    Binding="{Binding SelectedValue,
                    ElementName=cmbAgent}"
                    Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                    <DataTrigger
                    Binding="{Binding SelectedValue,
                    ElementName=cmbStatus}"
                    Value="{x:Null}">
                    <Setter Property="IsEnabled" Value="False" />
                    </DataTrigger>
                    <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Value, ElementName=dteDateOfSale}" Value="{x:Null}" />
                    <Condition Binding="{Binding SelectedValue, ElementName=cmbStatus}" Value="1" />
                    <Condition Binding="{Binding Tag, ElementName=DimBorder}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="False" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding IsValueValid, ElementName=dteDateOfSale}" Value="False" />
                    <Condition Binding="{Binding Tag, ElementName=DimBorder}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter Property="IsEnabled" Value="False" />
                    </MultiDataTrigger>
                -->
            </Style.Triggers>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate
                        TargetType="{x:Type Button}">
                        <Border
                            x:Name="ButtonBorder"
                            Background="{DynamicResource BrandedBrushIN_light}"
                            BorderBrush="{DynamicResource BrandedBrushIN}"
                            BorderThickness="2"
                            CornerRadius="4"
                            RenderTransformOrigin="0.5,0.5">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition
                                        Height="*" />
                                    <RowDefinition
                                        Height="1.5*" />
                                </Grid.RowDefinitions>
                                <Border
                                    Grid.Row="0"
                                    Grid.RowSpan="2"
                                    CornerRadius="4,4,0,0">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                                            <GradientStop Offset="0" Color="#55FFFFFF" />
                                            <GradientStop Offset="1" Color="{DynamicResource BrandedColourIN}" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter
                                    x:Name="ButtonContentPresenter"
                                    Grid.Row="0"
                                    Grid.RowSpan="2"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsKeyboardFocused" Value="true">
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource BrandedBrushIN}" />
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_mediumlight}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource BrandedBrushIN_mediumlight}" />
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource BrandedBrushIN}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="{DynamicResource BrandedBrushIN}" />
                                <Setter TargetName="ButtonBorder" Property="Background" Value="{DynamicResource BrandedBrushIN_dark}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter TargetName="ButtonBorder" Property="BorderBrush" Value="LightGray" />
                                <Setter TargetName="ButtonBorder" Property="Background" Value="LightGray" />
                                <Setter Property="Foreground" Value="Gray" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </src:BaseControl.Resources>

    <Border
        x:Name="DimBorder"
        Width="1200"
        Height="750"
        BorderBrush="Transparent"
        BorderThickness="0"
        CornerRadius="12"
        Opacity="1">
        <Border.Style>
            <Style>
                <Setter Property="Border.Background" Value="Transparent" />
                <Style.Triggers>
                    <Trigger Property="Border.IsEnabled" Value="False">
                        <Setter Property="Border.Background" Value="Gray" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Border.Style>
        <Border
            x:Name="MainBorder"
            Width="1200"
            Height="750"
            Background="Transparent"
            BorderBrush="{DynamicResource BrandedBrushIN}"
            BorderThickness="2"
            CornerRadius="12">
            <Border.Style>
                <Style>
                    <Setter Property="Border.Opacity" Value="1" />
                    <Style.Triggers>
                        <Trigger Property="Border.IsEnabled" Value="False">
                            <Setter Property="Border.Opacity" Value="0.7" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Border.Style>
            <Viewbox>
                <Grid
                    x:Name="LayoutRoot"
                    Width="1200"
                    Height="750">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Button
                        x:Name="btnClose"
                        Grid.Column="27"
                        Click="btnClose_Click"
                        IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type src:BaseControl}}, Path=IsReportRunning, Converter={StaticResource InverseBooleanConverter}}"
                        IsTabStop="True"
                        Style="{DynamicResource INCloseButton}" />

                    <!--  IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type src:BaseControl}}, Path=}"  -->

                    <TextBlock
                        x:Name="hdrDiaryToFinalReport"
                        Grid.Row="1"
                        Grid.Column="2"
                        Grid.ColumnSpan="7"
                        Margin="0"
                        VerticalAlignment="Top"
                        Style="{DynamicResource INPageHeadingText1}"
                        Text="Diary To Final Status Report" />

                    <Path
                        x:Name="hdrLine"
                        Grid.Row="1"
                        Grid.Column="2"
                        Grid.ColumnSpan="7"
                        Width="273"
                        Margin="0,0,0,14"
                        HorizontalAlignment="Left"
                        Style="{DynamicResource INUnderlineText1}" />

                    <TextBlock
                        x:Name="lblCampaigns"
                        Grid.Row="2"
                        Grid.Column="2"
                        Grid.ColumnSpan="4"
                        Margin="0,0,0,6"
                        VerticalAlignment="Bottom"
                        Style="{DynamicResource INLabelText2}"
                        Text="Select Campaign"
                        TextWrapping="NoWrap"
                        Visibility="Visible" />
                    <src:EmbriantComboBox
                        x:Name="cmbCampaign"
                        Grid.Row="3"
                        Grid.Column="2"
                        Grid.ColumnSpan="8"
                        Margin="0"
                        HorizontalAlignment="Stretch"
                        VerticalAlignment="Top"
                        IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type src:BaseControl}}, Path=IsReportRunning, Converter={StaticResource InverseBooleanConverter}}"
                        Loaded="cmbCampaign_Loaded"
                        PreviewKeyDown="EmbriantComboBox_PreviewKeyDown"
                        SelectionChanged="cmbCampaign_SelectionChanged"
                        Style="{DynamicResource cmbINHighlightBorder}"
                        TabIndex="0" />

                    <TextBlock
                        x:Name="lblBatches"
                        Grid.Row="4"
                        Grid.Column="2"
                        Grid.ColumnSpan="4"
                        Margin="0,0,0,6"
                        VerticalAlignment="Bottom"
                        Style="{DynamicResource INLabelText2}"
                        Text="Select Batch(es)"
                        TextWrapping="NoWrap"
                        Visibility="Visible" />
                    <igWPF:XamDataGrid
                        x:Name="xdgBatches"
                        Grid.Row="5"
                        Grid.RowSpan="11"
                        Grid.Column="2"
                        Grid.ColumnSpan="8"
                        Margin="0"
                        HorizontalContentAlignment="Stretch"
                        VerticalContentAlignment="Stretch"
                        AutoFit="False"
                        GroupByAreaLocation="None"
                        TabIndex="0">
                        <!--
                        IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type src:BaseControl}}, Path=IsReportRunning, Converter={StaticResource InverseBooleanConverter}}"
                        Style="{DynamicResource INXamDataGridStyle1}"
                        -->


                        <igWPF:XamDataGrid.Resources>
                            <Style
                                TargetType="{x:Type igWPF:HeaderPrefixArea}">
                                <Setter Property="Visibility" Value="Visible" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate
                                            TargetType="{x:Type igWPF:HeaderPrefixArea}">
                                            <CheckBox
                                                x:Name="HeaderPrefixAreaCheckbox"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Checked="HeaderPrefixAreaCheckbox_Checked"
                                                IsChecked="False"
                                                Loaded="HeaderPrefixAreaCheckbox_Loaded"
                                                Style="{DynamicResource INCheckboxStyle}"
                                                Unchecked="HeaderPrefixAreaCheckbox_Unchecked" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style
                                TargetType="{x:Type igWPF:RecordSelector}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate
                                            TargetType="{x:Type igWPF:RecordSelector}">
                                            <CheckBox
                                                x:Name="RecordSelectorCheckbox"
                                                HorizontalAlignment="Center"
                                                VerticalAlignment="Center"
                                                Click="RecordSelectorCheckbox_Click"
                                                Focusable="False"
                                                IsChecked="{Binding DataItem.Select, Mode=TwoWay}"
                                                Style="{DynamicResource INCheckboxStyle}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </igWPF:XamDataGrid.Resources>

                        <igWPF:XamDataGrid.FieldLayouts>
                            <igWPF:FieldLayout>
                                <igWPF:Field
                                    Name="ID"
                                    Label="Batch ID"
                                    Visibility="Collapsed" />
                                <igWPF:Field
                                    Name="FKINCampaignID"
                                    Label="Campaign ID"
                                    Visibility="Collapsed" />
                                <igWPF:Field
                                    Name="Batch"
                                    Width="290"
                                    Label="Batch"
                                    Visibility="Visible" />
                                <igWPF:Field
                                    Name="UDMCode"
                                    Width="290"
                                    Label="UDM Batch Code"
                                    Visibility="Collapsed" />
                                <!--<igWPF:Field
                                    Name="Code"
                                    Width="290"
                                    Label="Platinum Batch Code"
                                    Visibility="Collapsed" />-->
                                <!--
                                    <igWPF:Field
                                    Name="CampaignName"
                                    Width="290"
                                    Label="Campaign Name" />
                                -->
                                <igWPF:Field
                                    Name="Select"
                                    Label="Select"
                                    Visibility="Collapsed" />
                            </igWPF:FieldLayout>
                        </igWPF:XamDataGrid.FieldLayouts>
                    </igWPF:XamDataGrid>

                    <TextBlock
                        x:Name="lblCal1"
                        Grid.Row="2"
                        Grid.Column="12"
                        Grid.ColumnSpan="4"
                        Margin="11,0,0,6"
                        VerticalAlignment="Bottom"
                        Style="{DynamicResource INLabelText2}"
                        Text="Select Start Date"
                        TextWrapping="NoWrap"
                        Visibility="Hidden" />
                    <Viewbox
                        Grid.Row="3"
                        Grid.RowSpan="6"
                        Grid.Column="12"
                        Grid.ColumnSpan="6"
                        Width="250"
                        Height="250"
                        Margin="0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Stretch="Fill" Visibility="Hidden">
                        <igWPF:XamMonthCalendar
                            x:Name="Cal1"
                            Margin="0"
                            FontSize="16"
                            IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type src:BaseControl}}, Path=IsReportRunning, Converter={StaticResource InverseBooleanConverter}}"
                            SelectedDatesChanged="Cal1_SelectedDatesChanged"
                            Style="{DynamicResource INXamMonthCalendarStyle2}"
                            TabIndex="0"
                            Visibility="Hidden" />
                    </Viewbox>

                    <TextBlock
                        x:Name="lblCal2"
                        Grid.Row="2"
                        Grid.Column="20"
                        Grid.ColumnSpan="6"
                        Margin="12,0,0,6"
                        VerticalAlignment="Bottom"
                        Style="{DynamicResource INLabelText2}"
                        Text="Select End Date"
                        TextWrapping="NoWrap"
                        Visibility="Visible" />
                    <Viewbox
                        Grid.Row="3"
                        Grid.RowSpan="6"
                        Grid.Column="20"
                        Grid.ColumnSpan="6"
                        Width="250"
                        Height="250"
                        Margin="0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        Stretch="Fill">
                        <igWPF:XamMonthCalendar
                            x:Name="Cal2"
                            Margin="0"
                            FontSize="16"
                            IsEnabled="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type src:BaseControl}}, Path=IsReportRunning, Converter={StaticResource InverseBooleanConverter}}"
                            SelectedDatesChanged="Cal2_SelectedDatesChanged"
                            Style="{DynamicResource INXamMonthCalendarStyle2}"
                            TabIndex="0"
                            Visibility="Visible" />
                    </Viewbox>


                    <Button
                        x:Name="btnReport"
                        Grid.Row="15"
                        Grid.Column="22"
                        Grid.ColumnSpan="4"
                        Margin="0"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom"
                        Click="btnReport_Click"
                        Content="Report"
                        Style="{DynamicResource ReportButton}"
                        TabIndex="0" />

                    <!--
                        <CheckBox
                        x:Name="chkTest"
                        Grid.Row="0"
                        Grid.Column="0"
                        IsChecked="{Binding ElementName=ctrlReport,
                        Path=IsAllRecordsSelected}">
                        </CheckBox>
                    -->

                </Grid>
            </Viewbox>
        </Border>
    </Border>

</src:BaseControl>
